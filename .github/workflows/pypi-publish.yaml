name: Monthly Publish if Changes

on:
  schedule:
    - cron: '0 0 25 * *'  # 毎月25日 0:00 UTC（日本時間9:00）

jobs:
  publish-if-needed:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Get current year.month version
        id: get_version
        run: |
          VERSION=$(date "+%Y.%m")
          TAG="v$VERSION"
          BRANCH="release/$VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          echo "branch=$BRANCH" >> $GITHUB_OUTPUT

      - name: Check for commits in the past month
        id: check_commits
        # LAST_TAG 以降に commit があるか？
        run: |
          LAST_TAG=$(git describe --tags --abbrev=0)
          echo "Last tag: $LAST_TAG"
          if git log "${LAST_TAG}.." --pretty=oneline | grep .; then
            echo "has_changes=true" >> $GITHUB_OUTPUT
          else
            echo "No changes since $LAST_TAG"
            echo "has_changes=false" >> $GITHUB_OUTPUT
          fi

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: pyproject.toml
      - name: Install dependencies
        if: steps.check_commits.outputs.has_changes == 'true'
        run: |
          pip install --upgrade pip
          pip install -e .[dev,github-actions]

      - name: Publish to PyPI
        if: steps.check_commits.outputs.has_changes == 'true'
        env:
          FLIT_USERNAME: __token__
          FLIT_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: flit publish

      # オプション：バージョンをインクリメント
      - name: Bump version
        if: steps.check_commits.outputs.has_changes == 'true'
        run: python version_bump.py

      - name: Create release branch, commit version bump and push tag
        if: steps.check_commits.outputs.has_changes == 'true'
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git checkout -b "${{ steps.get_version.outputs.branch }}"
          git add pyproject.toml
          git commit -m "Release version ${{ steps.get_version.outputs.version }}"
          git tag ${{ steps.get_version.outputs.tag }}
          git push origin "${{ steps.get_version.outputs.branch }}"
          git push origin ${{ steps.get_version.outputs.tag }}

      - name: Create pull request
        if: steps.check_commits.outputs.has_changes == 'true'
        run: |
          gh pr create \
            --title "Release v${{ steps.get_version.outputs.version }}" \
            --body "This PR updates the version to v${{ steps.get_version.outputs.version }} for monthly release." \
            --base main \
            --head "${{ steps.get_version.outputs.branch }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}