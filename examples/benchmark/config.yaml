generic:
  workspace: "./work"
  job_command: "python user.py"
  python_file: "./user.py"
  function: "main"
  batch_job_timeout: 600
  #sleep_time: 0.01

resource:
  type: "abci"
  #type: "local"
  #type: "python_local"
  num_node: 4

ABCI:
  group: "[group]"
  job_script_preamble: "./job_script_preamble.sh"
  job_execution_options: ""
  runner_search_pattern:

optimize:
  search_algorithm: "aiaccel.optimizer.NelderMeadOptimizer"
  #search_algorithm: "aiaccel.optimizer.RandomOptimizer"
  #search_algorithm: "aiaccel.optimizer.SobolOptimizer"
  #search_algorithm: "aiaccel.optimizer.GridOptimizer"
  #search_algorithm: "aiaccel.optimizer.TpeOptimizer"
  goal: "minimize"
  trial_number: 30
  rand_seed: 42
  parameters:
    -
      name: "x1"
      type: "uniform_float"
      lower: 0.0
      upper: 5.0
      initial: 1.0
    -
      name: "x2"
      type: "uniform_float"
      lower: 0.0
      upper: 5.0
      initial: 1.0

job_setting:
  cancel_retry: 3
  cancel_timeout: 60
  expire_retry: 3
  expire_timeout: 60
  finished_retry: 3
  finished_timeout: 60
  job_loop_duration: 0.5
  job_retry: 2
  job_timeout: 60
  kill_retry: 3
  kill_timeout: 60
  result_retry: 1
  runner_retry: 3
  runner_timeout: 60
  running_retry: 3
  running_timeout: 60
  init_fail_count: 100
  name_length: 6
  random_scheduling: false
  #random_scheduling: true


logger:
  file:
    master: "master.log"
    optimizer: "optimizer.log"
    scheduler: "scheduler.log"
  log_level:
    master: "DEBUG"
    optimizer: "DEBUG"
    scheduler: "DEBUG"
  stream_level:
    master: "DEBUG"
    optimizer: "DEBUG"
    scheduler: "DEBUG"

verification:
  is_verified: false
  condition: []