# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2024, AIST
# This file is distributed under the same license as the aiaccel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: aiaccel \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-06-06 08:49+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: en\n"
"Language-Team: en <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"

#: ../../source/examples/local_budget_specified_grid_optimizer.md:1
msgid "バジェット指定型グリッドオプティマイザのローカル環境での実行例"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:3
msgid ""
"ここでは，バジェット指定型グリッドオプティマイザをローカルで実行する方法を説明します． 例として，ベンチマーク関数の一つである Schwefel "
"の最適化を行います．"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:6
msgid ""
"以下の説明では aiaccel/examples/budget_specified_grid_optimizer "
"に保存されているファイルを編集して使用します．"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:8
msgid "1. ファイル構成"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:10
msgid "config.yaml"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:12
msgid "最適化およびソフトウェアの設定ファイルです．"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:13
msgid "与えられたパラメータからベンチマーク関数 Schwefel の値を計算し，aiaccel の Storage に保存するユーザプログラムです．"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:18
msgid "2. ファイル作成手順"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:20
msgid "config.yaml の作成"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:22
msgid "**generic**"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:31
msgid "**workspace** - aiaccel の実行に必要な一時ファイルを保存するディレクトリを指定します．"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:32
msgid "**job_command** - ユーザープログラムを実行するためのコマンドです．"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:33
msgid "**batch_job_timeout** - ジョブのタイムアウト時間を設定します．[単位: 秒]"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:34
msgid ""
"**enabled_variable_name_argumentation** - `\"True\"` or `\"False\"` "
"によって，コマンドライン引数の指定方法が変わります．(参照： "
"[aiaccel/examples/vlmop2/README.md](https://github.com/aistairc/aiaccel/blob/0c2559fedee384694cc7ca72d8082b8bed4dc7ad/examples/vlmop2/README.md?plain=1#L35))"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:35
msgid "**logging_level** - ログの出力レベルを `\"INFO\"` に設定します．"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:38
msgid ""
"Windows では，仮想環境の python で実行するためには `job_command` の欄を "
"`\"optenv/Scripts/python.exe\"` のように設定する必要があります．"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:41
msgid "**resource**"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:48
msgid "**type** - 実行環境を指定します．ローカル環境で実行するためには `\"local\"` で設定します．"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:49
msgid "**num_workers** - 使用するノード数を指定します．"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:52
msgid "**ABCI**"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:54
msgid "ローカル実行のため使用しません．"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:56
msgid "**optimize**"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:93
msgid "**search_algorithm** - 最適化アルゴリズムを設定します．この例ではバジェット指定型グリッドオプティマイザを設定しています．"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:94
msgid "**goal** - 最適化の方向を設定します．"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:95
msgid "関数 Schwefel を最小化することが目的であるため，`\"minimize\"` を設定しています．"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:96
msgid ""
"**trial_number** - "
"試行回数を設定します．数値パラメータに選択肢の数が設定されていない場合，バジェット指定型グリッドオプティマイザは，この値を元に自動で選択肢数を割り当てます．"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:97
msgid "**rand_seed** - 乱数の生成に使用するシードを設定します．"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:98
msgid ""
"**grid_sampling_method** - "
"グリッド点のサンプリング方法を設定します[[参考](#付録２-グリッド点のサンプリング)]．指定可能なサンプリング方法は以下の 4 つです．"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md
#: ../../source/examples/local_budget_specified_grid_optimizer.md:99
#: ../../source/examples/local_budget_specified_grid_optimizer.md:304
msgid "IN_ORDER"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md
#: ../../source/examples/local_budget_specified_grid_optimizer.md:100
#: ../../source/examples/local_budget_specified_grid_optimizer.md:305
msgid "UNIFORM"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md
#: ../../source/examples/local_budget_specified_grid_optimizer.md:101
#: ../../source/examples/local_budget_specified_grid_optimizer.md:306
msgid "DUPRECATABLE_RANDOM"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md
#: ../../source/examples/local_budget_specified_grid_optimizer.md:102
#: ../../source/examples/local_budget_specified_grid_optimizer.md:307
msgid "RANDOM"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:103
msgid ""
"**grid_accept_small_trial_number** - "
"生成される最小のグリッド点の数よりも試行回数が小さい場合に，aiaccel の実行を強制するかを `true` または `false` "
"で設定します[[参考](#試行回数が少ない場合の強制実行)]．"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:104
msgid ""
"**parameters** - ハイパパラメータの各種項目を設定します．ここでは 5 次元の Schwefel の最適化を行うため，5 "
"種類のパラメータを用意しています．5 "
"つのパラメータに対して，以下の項目をそれぞれ設定する必要があります．パラメータの範囲や初期値を，全て同じにする必要はありません．"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:105
msgid "**name** - ハイパパラメータの名前を設定します．"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:106
msgid "**type** - ハイパパラメータのデータ型を設定します．バジェット指定型グリッドオプティマイザでは以下の 4 つから選択することができます．"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:107
msgid "uniform_float - 浮動小数点数"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:108
msgid "uniform_int - 整数"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:109
msgid "categorical - カテゴリカル変数"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:110
msgid "ordinal - オーディナル変数"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:111
msgid "**lower / upper** - ハイパパラメータ最小値 / 最大値を設定します．"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:112
msgid "**log** -  対数スケールでパラメータ空間を分割するかを `true` または `false` で設定します．"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:113
msgid "**choices** - データ型が \"categorical\" の場合，ハイパパラメータの選択肢をリストとして設定します．"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:114
msgid "**sequence** - データ型が \"ordinal\" の場合，ハイパパラメータの選択肢をリストとして設定します．"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:116
msgid "**注意**: バジェット指定型グリッドオプティマイザでは，パラメータの初期値を設定することができません．"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:118
msgid "user.py の作成"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:120
msgid "`user.py` は以下のように記述します．"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:138
msgid "**モジュール**"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:144
msgid "必要なモジュールをインポートします．"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:146
msgid "numpy - 関数 Schwefel を計算するために使用します．"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:147
msgid ""
"aiaccel.util.aiaccel - ユーザープログラム内で定義される関数 `main()` と "
"aiaccelとの間のインターフェイスを提供します．"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:150
msgid "**main**"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:157
msgid ""
"最適化対象の関数で，aiaccel はこの関数の `return` 値を最小化します． 引数にハイパパラメータの辞書型オブジェクトを取ります， "
"この例では，関数 Schwefel の値を計算し，返却します．"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:161
msgid "**実行部分**"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:167
msgid ""
"aiaccel から関数 `main()` にハイパパラメータを渡し，`main()` の返却値を Storage に保存します． `run` "
"はそのインターフェイスとなるインスタンスです． メソッド `execute_and_report()` の内部で `main()` "
"が値を計算し，Storage に計算結果が保存されます．"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:174
msgid "3. 実行"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:176
msgid "作成した config.yaml と user.py が保存されているディレクトリに移動し，下記のコマンドで aiaccel を起動してください．"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:182
msgid "コマンドラインオプション引数"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:183
msgid "`--config` - 設定ファイルを読み込むためのオプション引数です．読み込むコンフィグのパスを記述します．"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:184
msgid ""
"`--clean` - aiaccel の起動ディレクトリ内に config.yaml の workspace "
"で指定したディレクトリが存在する場合，削除してから実行するためのオプション引数です．"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:188
msgid "4. 結果の確認"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:190
msgid "aiaccel の正常終了後，最適化の結果は以下に保存されます．"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:192
msgid "./work/results.csv"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:194
msgid "ここで，./work はコンフィグファイルの workspace に設定したディレクトリです．"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:196
msgid "results.csv には，それぞれの試行でのパラメータの値と，そのパラメータに対する目的関数の値が保存されています．"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:198
msgid "上で実行した最適化の結果は以下のようになります．"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:200
msgid "trial_id: 0"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:201
msgid "parameters:"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:202
msgid "x1 (FLOAT) = -500.0"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:203
msgid "x2 (FLOAT) = 50.0"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:204
msgid "x3 (INT) = -500"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:205
msgid "x4 (CATEGORICAL) = -500"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:206
msgid "x5 (ORDINAL) = -500"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:207
msgid "result: -757.799698717469"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:214
msgid "付録１ 通常のグリッドオプティマイザとの違い"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:216
msgid ""
"通常のグリッドオプティマイザ (GridOptimizer) とバジェット指定型のグリッドオプティマイザ "
"(BudgetSpecifiedGridOptimizer) では，数値パラメータ (`uniform_float` 型 および "
"`uniform_int` 型) の選択肢の設定方法が異なります． 以下の表に数値パラメータの設定フィールドをまとめます．"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md
msgid "GridOptimizer"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md
msgid "BudgetSpecifiedGridOprimizer"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md
msgid "`name`"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md
msgid "○"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md
msgid "`type`"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md
msgid "`lower`"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md
msgid "`upper`"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md
msgid "`log`"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md
msgid "`step`"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md
msgid "×"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md
msgid "`base`"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md
msgid "`num_numeric_choices`"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:230
msgid ""
"表から分かる通り，`name`，`type`，`lower`，`upper`，および `log` といったフィールドは共通で使用されます． "
"一方で，通常のグリッドオプティマイザで使用される `step` と `base` はバジェット指定型のグリッドオプティマイザでは使用されません． "
"逆に， `num_numeric_choices` はバジェット指定型の場合にのみ使用され，通常のグリッドオプティマイザでは使用されません．"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:234
msgid ""
"通常のグリッドオプティマイザは，数値パラメータの選択肢を値の刻み幅 `step` (`log`=True の場合は $ {\\rm "
"base^{step}} $) から生成します． 一方で，バジェット指定型の場合には，数値パラメータの選択肢は，`lower` と `upper`"
" で指定される定義域に等間隔に (`log`=True なら対数スケール上で) 分布する `num_numeric_choices` 個の値です．"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:237
msgid ""
"また， `step` と `base` が通常のグリッドオプティマイザで必須のフィールドであるのに対して， "
"`num_numeric_choices` はバジェット指定型のグリッドオプティマイザであっても必須のフィールドではありません． "
"これは，指定されたバジェット = 試行回数 (trial_number) "
"から適当な選択肢の数が自動で計算され，選択肢の数が設定されていないパラメータの `num_numeric_choices` "
"として割り当てられるためです． 従って，特定のパラメータの探索回数を増やしたい (あるいは減らしたい) 場合には， "
"`num_numeric_choices` を手動で指定すると良いでしょう． 上で説明した例では，\"x3\" "
"には選択肢の数が設定されていますが， \"x1\" と \"x2\" には設定されていません． そのため，\"x1\" と \"x2\" "
"には自動で選択肢の数が設定されることになります．"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:244
msgid "付録２ グリッド点のサンプリング"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:246
msgid "数値パラメータの選択肢の生成"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:247
msgid ""
"`num_numeric_choices` が手動で設定された数値パラメータ，カテゴリカルパラメータ，またはオーディナルパラメータが，それぞれ "
"$c_i$ 個の選択肢を持つ場合，全グリッド点の探索に必要な最小の試行回数は $ m = \\prod_i c_i $ と表せます． "
"実際にコンフィグで指定された試行回数を $n$ とすると，選択肢が指定されていない数値パラメータの選択肢は $ n' = n / m $ "
"から計算されます． 割り当てられる選択肢の数は $ x $ 個または $ x - 1 $ "
"個で，選択肢を割り当てられたパラメータ同士で選択肢の数の差は 1 を超えません． このとき，$x$ は $ x^q (x - 1)^{p - q}"
" \\geq n' $ を満たす最小の値として決定されます．ここで， $p$ は選択肢の数が未指定なパラメータの数， $q$ は $0 < q "
"\\leq p $ を満たす整数です．"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:252
msgid ""
"例えば，試行回数が $n = 12$ のとき，2 つのパラメータ $x_1,\\ x_2$ "
"を，選択肢の数を指定せずに最適化しようとした場合，それぞれのパラメータには 4 つと 3 つの選択肢が割り当てられることになります．"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:254
msgid ""
"自動・手動に関わらず，選択肢の数が決定した後，数値パラメータの選択肢を生成するために，aiaccel では numpy の関数を活用します． "
"具体的には，対数スケールでの探索が無効の場合 (`log = false`) には `numpy.linspace` "
"で，対数スケールでの探索が有効の場合 (`log = true`) には `numpy.geomspace` でパラメータの選択肢を生成します． "
"このとき，指定された `lower` と `upper` はこれら 2 つの関数に，引数 _start_ および _stop_ "
"としてそれぞれ渡されます．"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:258
msgid "ここで例として，以下のような設定を考えます．"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:279
msgid "この場合， `x1`，`x2`，`x3` の選択肢として，以下が得られます．"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:286
msgid ""
"`x3` では，設定した選択肢の数 (`num_numeric_choices = 5`) よりも生成された選択肢の数 ( `= 2`) "
"の方が少なくなっています． これは，選択肢を生成する過程で，浮動小数点数を整数に変換する際に発生した重複を除いたためです． "
"具体的には，以下のような操作によって重複が省かれています．"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:294
msgid "`int` 型のパラメータを用いる場合，このような点にも注意して選択肢の数を設定する必要があります．"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:297
msgid "グリッド点のサンプリング"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:299
msgid ""
"[数値パラメータの選択肢の生成](#数値パラメータの選択肢の生成)で述べたように，自由に割り当てられる試行回数が $n'$ "
"のとき，各パラメータの選択肢の数 $x$ と $x - 1$ は $ x^q (x - 1)^{p - q} \\geq n' $ "
"を満たすように決まります． 従って，生成されるグリッド点の数は，試行回数よりも多い場合があります． "
"このような場合，全てのグリッド点から一部の点を選択 (サンプリング) して探索することになります．"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:303
msgid "aiaccel では以下の 4 つのサンプリング方法を用いることができます．"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:310
msgid "以下では，次のような設定を用いて，サンプリング方法の違いを説明します．"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:330
msgid ""
"この例では，試行回数が 10 回と指定されているため， 2 つのパラメータ `x1` と `x2` にはそれぞれ 4 つと 3 "
"つの選択肢が割り当てられます [ $4 \\times 3 = 12 > 10 (= {\\rm trial\\_number})$ ]． "
"従って，生成されるグリッド点は 12 点ですが，試行回数がこれより少ないため， 2 点は探索されません．"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:334
msgid ""
"探索されるグリッド点を `x1` と `x2` が張る平面にプロットすると以下のようになります． プロットの縦軸と横軸はそれぞれ `x1` と "
"`x2` に対応します． 記号 `X`，`Y`，および `_` は，それぞれ 1 回だけ探索された点，2 "
"回探索された点，および探索されなかった点を表します． DUPRECATABLE_RANDOM および RANDOM は乱数生成に用いるシードが "
"42 の場合の結果です．"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:339
msgid "*IN_ORDER*"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:349
msgid "*UNIFORM*"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:359
msgid "*DUPRICATABLE_RANDOM*"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:369
msgid "*RANDOM*"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:379
msgid "探索された`x1` と `x2` の組み合わせを表にまとめると以下のようになります． 記号の意味はプロットと同じです．"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md
msgid "grid_id"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md
msgid "x1"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md
msgid "x2"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md
msgid "0"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md
msgid "X"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md
msgid "Y"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md
msgid "1"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md
msgid "2"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md
msgid "_"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md
msgid "3"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md
msgid "4"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md
msgid "5"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md
msgid "6"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md
msgid "7"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md
msgid "8"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md
msgid "9"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md
msgid "10"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md
msgid "11"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:397
msgid ""
"IN_ORDER，UNIFORM，および RANDOM は重複なしで探索を行います． IN_ORDER "
"でサンプリングした場合，無視されるグリッド点が探索空間の端に集中します． 一方で，UNIFORM または "
"RANDOMでサンプリングした場合，無視されるグリッド点が分散するため，満遍なくパラメータを探索できます． UNIFORM と RANDOM "
"の違いは，サンプリングされる点が解析的に予測できるか否かです． UNIFORM では，`numpy.linspace` "
"を用いて探索対象となるグリッド点の id の配列をあらかじめ生成しますが，RANDOM では "
"`numpy.random.RandomState.choice` を用いてグリッド点をランダムに選択します．"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:403
msgid ""
"DUPRECATABLE_RANDOM でも `numpy.random.RandomState` "
"を用いてランダムにグリッド点の選択を行いますが，RANDOM とは異なり，選択されるグリッド点に重複が発生する可能性があります． "
"これは，DUPRECATABLE_RANDOM でサンプリングを行う場合には，aiaccel の内部でグリッド点の \"組み合わせ\" "
"を保持しないことが原因です． 例えば `x1` の選択として `[0, 1]` が，`x2` の選択肢として `[0, 1, 2]` "
"が与えられた場合，RANDOM では `grid_points = [(0, 0), (0, 1), (0, 2), (1, 0), (1, "
"1), (1, 2)]` というような 6 つの組み合わせを保持しますが，DUPRECATABLE_RANDOM では `x1` と `x2` "
"の選択肢 (計 5 つ) だけをそのまま保持します． 従って DUPRECATABLE_RANDOM は，例えば 10 個のパラメータがそれぞれ "
"10 個の選択肢を持つような場合に，必要なメモリの大きさの観点から RANDOM よりも優れていると言えます．"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:408
msgid ""
"DUPRECATABLE_RANDOM と同様に，IN_ORDER および UNIFORM "
"の場合もグリッド点を組み合わせとして保持しないため，密なグリッド空間を扱うことが可能です．"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:410
msgid "試行回数が少ない場合の強制実行"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:412
msgid ""
"選択肢の数が予め決まっているパラメータを使用する場合，全グリッド点を探索するために必要な最小の試行回数が存在します． 有効な "
"`num_numeric_choices` "
"が設定された数値パラメータを使用した場合や，カテゴリカル型やオーディナル型のパラメータを使用した場合が，この場合に相当します． "
"例えば以下の設定では，9 (= 1 x 3 x 3) つのグリッド点が生成されるため，必要な最小の試行回数は 9 となります．"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:434
msgid ""
"このようなパラメータの条件を与えたにもかかわらず，試行回数が 9 に満たない場合，デフォルト設定では aiaccel "
"は最適化を行わず強制終了します． もし，必要最小の試行回数よりも小さな試行回数で探索を行いたい場合には，optimize の下の階層で "
"`grid_accept_small_trial_number` を `true` に設定します．"
msgstr ""

#: ../../source/examples/local_budget_specified_grid_optimizer.md:440
msgid ""
"この設定で aiaccel を実行すると，上の例では 9 つのグリッド点から適当な点 (例えば trial_number = 5 なら 5 "
"つの点) がサンプリングされます．"
msgstr ""

