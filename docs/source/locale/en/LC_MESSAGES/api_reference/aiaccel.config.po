# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, AIST
# This file is distributed under the same license as the aiaccel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: aiaccel \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-10-03 21:55+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"

#: ../../source/api_reference/aiaccel.config.rst:2
msgid "aiaccel.config module"
msgstr ""

#: aiaccel.config.BaseConfig:1 aiaccel.config.Config:1
#: aiaccel.config.ConfigEntry:1 aiaccel.config.ConfileWrapper:1 of
msgid "ベースクラス: :py:class:`object`"
msgstr ""

#: aiaccel.config.BaseConfig:1 aiaccel.config.JsonOrYamlObjectConfig:1 of
msgid "Fork by confile: https://github.com/777nancy/confile"
msgstr ""

#: aiaccel.config.BaseConfig:3 of
msgid "This is an interface for all config classes."
msgstr ""

#: aiaccel.config.Config:1 of
msgid "A Class for defining the configuration of a configuration file."
msgstr ""

#: aiaccel.config.Config.define_items:1 of
msgid "Define the configuration of the configuration file"
msgstr ""

#: aiaccel.config.ConfigEntry:1 of
msgid ""
"A class for defining values in a configuration file         or for "
"holding read values."
msgstr ""

#: aiaccel.config.ConfigEntry:4 of
msgid "サンプル"
msgstr ""

#: aiaccel.config.ConfigEntry:10 of
msgid "workspace = ConfigEntry("
msgstr ""

#: aiaccel.config.ConfigEntry:6 of
msgid ""
"config=config, type=[str], default=_DEFAULT_WORKSPACE, warning=warn, "
"group=\"generic\", keys=(\"workspace\")"
msgstr ""

#: aiaccel.config.ConfigEntry:12 of
msgid ") workspace.get()"
msgstr ""

#: aiaccel.config.ConfigEntry.empty_if_error:1 of
msgid "If the value is not set, it will force an error to occur."
msgstr ""

#: aiaccel.config.ConfigEntry.get aiaccel.config.ConfileWrapper.get
#: aiaccel.config.JsonOrYamlObjectConfig.get_property
#: aiaccel.config.JsonOrYamlObjectConfig.to_dict aiaccel.config.load_config of
msgid "戻り値"
msgstr ""

#: aiaccel.config.ConfigEntry.get:1 of
msgid "self._value"
msgstr ""

#: aiaccel.config.ConfigEntry.load_config_values:1 of
msgid "Reads values from the configuration file."
msgstr ""

#: aiaccel.config.ConfigEntry.set:1 of
msgid "Args"
msgstr ""

#: aiaccel.config.ConfigEntry.set:2 of
msgid "value (any)"
msgstr ""

#: aiaccel.config.ConfigEntry.show_warning:1 of
msgid "If the default value is used, a warning is displayed."
msgstr ""

#: aiaccel.config.ConfileWrapper:1 of
msgid "A wrapper class for confile library."
msgstr ""

#: aiaccel.config.ConfileWrapper:3 of
msgid ""
"Thins wrapper class supports to load a configuration file in JSON object,"
" JSON file and YAML format. It provides a simple method 'get' to get a "
"property for the specified keys."
msgstr ""

#: aiaccel.config.ConfileWrapper.get:1 of
msgid "Get a property with specified keys."
msgstr ""

#: aiaccel.config.ConfileWrapper.get
#: aiaccel.config.JsonOrYamlObjectConfig.get_property of
msgid "パラメータ"
msgstr ""

#: aiaccel.config.ConfileWrapper.get:3 of
msgid "A key for the property"
msgstr ""

#: aiaccel.config.ConfileWrapper.get:5 of
msgid "Nested eys for the property"
msgstr ""

#: aiaccel.config.ConfileWrapper.get:8 of
msgid "A property for the specified keys."
msgstr ""

#: aiaccel.config.ConfileWrapper.get
#: aiaccel.config.JsonOrYamlObjectConfig.get_property
#: aiaccel.config.JsonOrYamlObjectConfig.to_dict aiaccel.config.load_config of
msgid "戻り値の型"
msgstr ""

#: aiaccel.config.JsonOrYamlObjectConfig:1 of
msgid "ベースクラス: :py:class:`~aiaccel.config.BaseConfig`"
msgstr ""

#: aiaccel.config.JsonOrYamlObjectConfig.get_property:1 of
msgid "Get a property for specified keys."
msgstr ""

#: aiaccel.config.JsonOrYamlObjectConfig.get_property:3 of
msgid "A key to get a property."
msgstr ""

#: aiaccel.config.JsonOrYamlObjectConfig.get_property:5 of
msgid "Keys to get a property."
msgstr ""

#: aiaccel.config.JsonOrYamlObjectConfig.get_property:8 of
msgid "A property for the keys."
msgstr ""

#: aiaccel.config.JsonOrYamlObjectConfig.to_dict:1 of
msgid "Convert the configuration to a dictionary object."
msgstr ""

#: aiaccel.config.JsonOrYamlObjectConfig.to_dict:3 of
msgid "The dictionary object of the configuration."
msgstr ""

#: aiaccel.config.load_config:1 of
msgid ""
"Load any configuration files, return the ConfileWrapper object. :param "
"config_path: A path to a configuration file. :type config_path: str"
msgstr ""

#: aiaccel.config.load_config:5 of
msgid "A wrapper object of the configuration."
msgstr ""

