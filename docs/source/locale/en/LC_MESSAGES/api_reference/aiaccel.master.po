# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, AIST
# This file is distributed under the same license as the aiaccel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: aiaccel \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-02-15 12:16+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"

#: ../../source/api_reference/aiaccel.master.rst:2
msgid "aiaccel.master package"
msgstr ""

#: ../../source/api_reference/aiaccel.master.rst:5
msgid "Subpackages"
msgstr ""

#: ../../source/api_reference/aiaccel.master.rst:14
msgid "Submodules"
msgstr ""

#: ../../source/api_reference/aiaccel.master.rst:17
msgid "aiaccel.master.abci\\_master module"
msgstr ""

#: aiaccel.master.abci_master.AbciMaster:1
#: aiaccel.master.local_master.LocalMaster:1
#: aiaccel.master.pylocal_master.PylocalMaster:1 of
msgid "ベースクラス: :py:class:`~aiaccel.master.abstract_master.AbstractMaster`"
msgstr ""

#: aiaccel.master.abci_master.AbciMaster:1 of
msgid "A master class running on ABCI environment."
msgstr ""

#: aiaccel.master.abci_master.AbciMaster
#: aiaccel.master.abstract_master.AbstractMaster
#: aiaccel.master.abstract_master.AbstractMaster.check_error
#: aiaccel.master.create.create_master
#: aiaccel.master.evaluator.abstract_evaluator.AbstractEvaluator
#: aiaccel.master.evaluator.abstract_evaluator.AbstractEvaluator.get_zero_padding_any_trial_id
#: aiaccel.master.verification.abstract_verification.AbstractVerification
#: aiaccel.master.verification.abstract_verification.AbstractVerification.make_verification
#: aiaccel.master.verification.abstract_verification.AbstractVerification.save
#: of
msgid "パラメータ"
msgstr ""

#: aiaccel.master.abci_master.AbciMaster:3
#: aiaccel.master.abstract_master.AbstractMaster:3 of
msgid "A dictionary containing command line options."
msgstr ""

#: aiaccel.master.abci_master.AbciMaster:9 of
msgid "A list of path of runner files."
msgstr ""

#: aiaccel.master.abci_master.AbciMaster
#: aiaccel.master.abstract_master.AbstractMaster
#: aiaccel.master.evaluator.abstract_evaluator.AbstractEvaluator
#: aiaccel.master.verification.abstract_verification.AbstractVerification of
msgid "type"
msgstr ""

#: aiaccel.master.abci_master.AbciMaster:11 of
msgid "list[Path]"
msgstr ""

#: aiaccel.master.abci_master.AbciMaster:15 of
msgid "A result string of 'qstat' command."
msgstr ""

#: aiaccel.master.abci_master.AbciMaster:17
#: aiaccel.master.verification.abstract_verification.AbstractVerification:59 of
msgid "list[dict]"
msgstr ""

#: aiaccel.master.abci_master.AbciMaster.get_stats:1
#: aiaccel.master.abstract_master.AbstractMaster.get_stats:1 of
msgid "Get a current status and update."
msgstr ""

#: aiaccel.master.abci_master.AbciMaster.get_stats
#: aiaccel.master.abci_master.AbciMaster.pre_process
#: aiaccel.master.abstract_master.AbstractMaster.check_error
#: aiaccel.master.abstract_master.AbstractMaster.get_stats
#: aiaccel.master.abstract_master.AbstractMaster.inner_loop_main_process
#: aiaccel.master.abstract_master.AbstractMaster.post_process
#: aiaccel.master.abstract_master.AbstractMaster.pre_process
#: aiaccel.master.abstract_master.AbstractMaster.print_dict_state
#: aiaccel.master.create.create_master
#: aiaccel.master.evaluator.abstract_evaluator.AbstractEvaluator.evaluate
#: aiaccel.master.evaluator.abstract_evaluator.AbstractEvaluator.get_zero_padding_any_trial_id
#: aiaccel.master.evaluator.abstract_evaluator.AbstractEvaluator.print
#: aiaccel.master.evaluator.abstract_evaluator.AbstractEvaluator.save
#: aiaccel.master.verification.abstract_verification.AbstractVerification.load_verification_config
#: aiaccel.master.verification.abstract_verification.AbstractVerification.make_verification
#: aiaccel.master.verification.abstract_verification.AbstractVerification.print
#: aiaccel.master.verification.abstract_verification.AbstractVerification.save
#: aiaccel.master.verification.abstract_verification.AbstractVerification.verify
#: of
msgid "戻り値"
msgstr ""

#: aiaccel.master.abci_master.AbciMaster.get_stats:3
#: aiaccel.master.abci_master.AbciMaster.pre_process:3
#: aiaccel.master.abstract_master.AbstractMaster.get_stats:3
#: aiaccel.master.abstract_master.AbstractMaster.post_process:3
#: aiaccel.master.abstract_master.AbstractMaster.pre_process:3
#: aiaccel.master.abstract_master.AbstractMaster.print_dict_state:4
#: aiaccel.master.evaluator.abstract_evaluator.AbstractEvaluator.evaluate:3
#: aiaccel.master.evaluator.abstract_evaluator.AbstractEvaluator.print:3
#: aiaccel.master.evaluator.abstract_evaluator.AbstractEvaluator.save:3
#: aiaccel.master.verification.abstract_verification.AbstractVerification.load_verification_config:3
#: aiaccel.master.verification.abstract_verification.AbstractVerification.make_verification:8
#: aiaccel.master.verification.abstract_verification.AbstractVerification.print:3
#: aiaccel.master.verification.abstract_verification.AbstractVerification.save:6
#: aiaccel.master.verification.abstract_verification.AbstractVerification.verify:6
#: of
msgid "None"
msgstr ""

#: aiaccel.master.abci_master.AbciMaster.pre_process:1
#: aiaccel.master.abstract_master.AbstractMaster.post_process:1
#: aiaccel.master.abstract_master.AbstractMaster.pre_process:1 of
msgid "Pre-procedure before executing processes."
msgstr ""

#: ../../source/api_reference/aiaccel.master.rst:25
msgid "aiaccel.master.abstract\\_master module"
msgstr ""

#: aiaccel.master.abstract_master.AbstractMaster:1 of
msgid "ベースクラス: :py:class:`~aiaccel.module.AbstractModule`"
msgstr ""

#: aiaccel.master.abstract_master.AbstractMaster:1 of
msgid "An abstract class for AbciMaster and LocalMaster."
msgstr ""

#: aiaccel.master.abstract_master.AbstractMaster:9
#: aiaccel.master.evaluator.abstract_evaluator.AbstractEvaluator:3
#: aiaccel.master.evaluator.abstract_evaluator.AbstractEvaluator:9
#: aiaccel.master.verification.abstract_verification.AbstractVerification:3
#: aiaccel.master.verification.abstract_verification.AbstractVerification:9 of
msgid "A dictionary containing command line options as well as process name."
msgstr ""

#: aiaccel.master.abstract_master.AbstractMaster:12
#: aiaccel.master.evaluator.abstract_evaluator.AbstractEvaluator:12
#: aiaccel.master.verification.abstract_verification.AbstractVerification:12 of
msgid "dict[str, str | int | bool]"
msgstr ""

#: aiaccel.master.abstract_master.AbstractMaster:16 of
msgid "A stored loop starting time."
msgstr ""

#: aiaccel.master.abstract_master.AbstractMaster:18
#: aiaccel.master.abstract_master.AbstractMaster:31 of
msgid "datetime.datetime"
msgstr ""

#: aiaccel.master.abstract_master.AbstractMaster:22 of
msgid "A reference for a subprocess of Optimizer."
msgstr ""

#: aiaccel.master.abstract_master.AbstractMaster:25 of
msgid "subprocess.Popen"
msgstr ""

#: aiaccel.master.abstract_master.AbstractMaster:29 of
msgid "A stored starting time."
msgstr ""

#: aiaccel.master.abstract_master.AbstractMaster:35 of
msgid "A verification object."
msgstr ""

#: aiaccel.master.abstract_master.AbstractMaster:37 of
msgid "AbstractVerification"
msgstr ""

#: aiaccel.master.abstract_master.AbstractMaster:41 of
msgid "Logger object."
msgstr ""

#: aiaccel.master.abstract_master.AbstractMaster:43 of
msgid "logging.Logger"
msgstr ""

#: aiaccel.master.abstract_master.AbstractMaster:47
#: aiaccel.master.evaluator.abstract_evaluator.AbstractEvaluator:52 of
msgid "Goal of optimization ('minimize' or 'maximize')."
msgstr ""

#: aiaccel.master.abstract_master.AbstractMaster:49
#: aiaccel.master.evaluator.abstract_evaluator.AbstractEvaluator:54 of
msgid "str"
msgstr ""

#: aiaccel.master.abstract_master.AbstractMaster:53 of
msgid "The number of trials."
msgstr ""

#: aiaccel.master.abstract_master.AbstractMaster:55
#: aiaccel.master.verification.abstract_verification.AbstractVerification:42 of
msgid "int"
msgstr ""

#: aiaccel.master.abstract_master.AbstractMaster:61
#: aiaccel.master.abstract_master.AbstractMaster:67 of
msgid "list"
msgstr ""

#: aiaccel.master.abstract_master.AbstractMaster.check_error:1 of
msgid "Check to confirm if an error has occurred."
msgstr ""

#: aiaccel.master.abstract_master.AbstractMaster.check_error:5 of
msgid "True if no error. False if with error."
msgstr ""

#: aiaccel.master.abstract_master.AbstractMaster.check_error
#: aiaccel.master.abstract_master.AbstractMaster.inner_loop_main_process
#: aiaccel.master.create.create_master
#: aiaccel.master.evaluator.abstract_evaluator.AbstractEvaluator.get_zero_padding_any_trial_id
#: of
msgid "戻り値の型"
msgstr ""

#: aiaccel.master.abstract_master.AbstractMaster.inner_loop_main_process:1 of
msgid "A main loop process. This process is repeated every main loop."
msgstr ""

#: aiaccel.master.abstract_master.AbstractMaster.inner_loop_main_process:3 of
msgid "The process succeeds or not. The main loop exits if failed."
msgstr ""

#: aiaccel.master.abstract_master.AbstractMaster.post_process
#: aiaccel.master.abstract_master.AbstractMaster.pre_process of
msgid "例外"
msgstr ""

#: aiaccel.master.abstract_master.AbstractMaster.post_process:5 of
msgid "Causes when an invalid goal is set."
msgstr ""

#: aiaccel.master.abstract_master.AbstractMaster.pre_process:5 of
msgid ""
"Causes when expire the count which cannot confirm to     run Optimizer "
"and Scheduler."
msgstr ""

#: aiaccel.master.abstract_master.AbstractMaster.print_dict_state:1 of
msgid ""
"Display the number of yaml files in 'ready', 'running', and 'finished' "
"directries in hp directory."
msgstr ""

#: ../../source/api_reference/aiaccel.master.rst:33
msgid "aiaccel.master.create module"
msgstr ""

#: aiaccel.master.create.create_master:1 of
msgid "Returns master type."
msgstr ""

#: aiaccel.master.create.create_master:3 of
msgid "Path to configuration file."
msgstr ""

#: aiaccel.master.create.create_master:6 of
msgid ""
"`LocalMaster`, `PylocalMaster`, or `AbciMaster`     if resource type is "
"'local', 'python_local', or 'abci',     respectively. Other cases, None."
msgstr ""

#: aiaccel.master.create.create_master:9 of
msgid "`LocalMaster`, `PylocalMaster`, or `AbciMaster`"
msgstr ""

#: aiaccel.master.create.create_master:9 of
msgid ""
"if resource type is 'local', 'python_local', or 'abci', respectively. "
"Other cases, None."
msgstr ""

#: ../../source/api_reference/aiaccel.master.rst:41
msgid "aiaccel.master.local\\_master module"
msgstr ""

#: aiaccel.master.local_master.LocalMaster:1
#: aiaccel.master.pylocal_master.PylocalMaster:1 of
msgid "A master class running on a local computer."
msgstr ""

#: ../../source/api_reference/aiaccel.master.rst:49
msgid "aiaccel.master.pylocal\\_master module"
msgstr ""

#: ../../source/api_reference/aiaccel.master.rst:57
msgid "Module contents"
msgstr ""

#: aiaccel.master.evaluator.abstract_evaluator.AbstractEvaluator:1
#: aiaccel.master.verification.abstract_verification.AbstractVerification:1 of
msgid "ベースクラス: :py:class:`object`"
msgstr ""

#: aiaccel.master.evaluator.abstract_evaluator.AbstractEvaluator:1 of
msgid "An abstract class for MaximizeEvaluator and MinimizeEvaluator."
msgstr ""

#: aiaccel.master.evaluator.abstract_evaluator.AbstractEvaluator:16 of
msgid "Path to the configuration file."
msgstr ""

#: aiaccel.master.evaluator.abstract_evaluator.AbstractEvaluator:18
#: aiaccel.master.evaluator.abstract_evaluator.AbstractEvaluator:30
#: aiaccel.master.evaluator.abstract_evaluator.AbstractEvaluator:36
#: aiaccel.master.verification.abstract_verification.AbstractVerification:24
#: aiaccel.master.verification.abstract_verification.AbstractVerification:30 of
msgid "Path"
msgstr ""

#: aiaccel.master.evaluator.abstract_evaluator.AbstractEvaluator:22 of
msgid "Config object."
msgstr ""

#: aiaccel.master.evaluator.abstract_evaluator.AbstractEvaluator:24
#: aiaccel.master.verification.abstract_verification.AbstractVerification:18 of
msgid "Config"
msgstr ""

#: aiaccel.master.evaluator.abstract_evaluator.AbstractEvaluator:28
#: aiaccel.master.verification.abstract_verification.AbstractVerification:22 of
msgid "Path to the workspace."
msgstr ""

#: aiaccel.master.evaluator.abstract_evaluator.AbstractEvaluator:34 of
msgid "Path to \"lock', i.e. `ws`/lock."
msgstr ""

#: aiaccel.master.evaluator.abstract_evaluator.AbstractEvaluator:40 of
msgid "A dict object of the best optimized result."
msgstr ""

#: aiaccel.master.evaluator.abstract_evaluator.AbstractEvaluator:42 of
msgid "dict"
msgstr ""

#: aiaccel.master.evaluator.abstract_evaluator.AbstractEvaluator:46
#: aiaccel.master.verification.abstract_verification.AbstractVerification:63 of
msgid "Storage object."
msgstr ""

#: aiaccel.master.evaluator.abstract_evaluator.AbstractEvaluator:48
#: aiaccel.master.verification.abstract_verification.AbstractVerification:65 of
msgid "Storage"
msgstr ""

#: aiaccel.master.evaluator.abstract_evaluator.AbstractEvaluator:58 of
msgid "TrialId object."
msgstr ""

#: aiaccel.master.evaluator.abstract_evaluator.AbstractEvaluator:60 of
msgid "TrialId"
msgstr ""

#: aiaccel.master.evaluator.abstract_evaluator.AbstractEvaluator.evaluate:1 of
msgid "Run an evaluation."
msgstr ""

#: aiaccel.master.evaluator.abstract_evaluator.AbstractEvaluator.get_zero_padding_any_trial_id:1
#: of
msgid "Returns string of trial id padded by zeros."
msgstr ""

#: aiaccel.master.evaluator.abstract_evaluator.AbstractEvaluator.get_zero_padding_any_trial_id:3
#: of
msgid "Trial id."
msgstr ""

#: aiaccel.master.evaluator.abstract_evaluator.AbstractEvaluator.get_zero_padding_any_trial_id:6
#: of
msgid "Trial id padded by zeros."
msgstr ""

#: aiaccel.master.evaluator.abstract_evaluator.AbstractEvaluator.print:1 of
msgid "Print current results."
msgstr ""

#: aiaccel.master.evaluator.abstract_evaluator.AbstractEvaluator.save:1 of
msgid "Save current results to a file."
msgstr ""

#: aiaccel.master.verification.abstract_verification.AbstractVerification:1 of
msgid "An abstract class of verification."
msgstr ""

#: aiaccel.master.verification.abstract_verification.AbstractVerification:16 of
msgid "Config object"
msgstr ""

#: aiaccel.master.verification.abstract_verification.AbstractVerification:28 of
msgid "Path to \"lock\", i.e. `ws`/lock."
msgstr ""

#: aiaccel.master.verification.abstract_verification.AbstractVerification:34 of
msgid "Whether verified or not."
msgstr ""

#: aiaccel.master.verification.abstract_verification.AbstractVerification:36 of
msgid "bool"
msgstr ""

#: aiaccel.master.verification.abstract_verification.AbstractVerification:40 of
msgid "The last loop number verified."
msgstr ""

#: aiaccel.master.verification.abstract_verification.AbstractVerification:46 of
msgid ""
"A list of verification conditions. Each element dict has keys 'loop', "
"'minimum', and 'maximum' with values as int, float, and float, "
"respectively. The verification is `True` if the optimized result of which"
" the trial id is the given 'loop' is greater than or equal to 'minimum' "
"as well as is less than or equal to the 'maximum'."
msgstr ""

#: aiaccel.master.verification.abstract_verification.AbstractVerification:53 of
msgid "list[dict[str, int | float]]"
msgstr ""

#: aiaccel.master.verification.abstract_verification.AbstractVerification:57 of
msgid "Deepcopy object of condition."
msgstr ""

#: aiaccel.master.verification.abstract_verification.AbstractVerification.load_verification_config:1
#: of
msgid "Load configurations about verification."
msgstr ""

#: aiaccel.master.verification.abstract_verification.AbstractVerification.make_verification:1
#: of
msgid "Run a verification and save the result."
msgstr ""

#: aiaccel.master.verification.abstract_verification.AbstractVerification.make_verification:3
#: of
msgid "An index of verifications."
msgstr ""

#: aiaccel.master.verification.abstract_verification.AbstractVerification.make_verification:5
#: of
msgid "A loop count of Master."
msgstr ""

#: aiaccel.master.verification.abstract_verification.AbstractVerification.print:1
#: of
msgid "Print current verifications result."
msgstr ""

#: aiaccel.master.verification.abstract_verification.AbstractVerification.save:1
#: of
msgid "Save current verifications result to a file."
msgstr ""

#: aiaccel.master.verification.abstract_verification.AbstractVerification.verify:1
#: of
msgid "Run a verification."
msgstr ""

#: aiaccel.master.verification.abstract_verification.AbstractVerification.verify:3
#: of
msgid ""
"The trigger to run a verification, is described in configuration file "
"'verification' > 'conditions'."
msgstr ""

#: aiaccel.master.evaluator.maximize_evaluator.MaximizeEvaluator:1
#: aiaccel.master.evaluator.minimize_evaluator.MinimizeEvaluator:1 of
msgid ""
"ベースクラス: "
":py:class:`~aiaccel.master.evaluator.abstract_evaluator.AbstractEvaluator`"
msgstr ""

#: aiaccel.master.evaluator.maximize_evaluator.MaximizeEvaluator:1 of
msgid "A evaluator class to maximize the results."
msgstr ""

#: aiaccel.master.evaluator.minimize_evaluator.MinimizeEvaluator:1 of
msgid "A evaluator class to minimize the results."
msgstr ""

#~ msgid "List[Path]"
#~ msgstr ""

#~ msgid "Anystr"
#~ msgstr ""

#~ msgid "no error | False: with error."
#~ msgstr ""

#~ msgid "Display the number of yaml files in 'ready' 'running'"
#~ msgstr ""

#~ msgid "and 'finished' directries in hp directory."
#~ msgstr ""

#~ msgid "Create a master class by selecting localmaster or abcimaster."
#~ msgstr ""

