# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2024, AIST
# This file is distributed under the same license as the aiaccel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: aiaccel \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-06-06 08:49+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: en\n"
"Language-Team: en <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"

#: ../../source/api_reference/aiaccel.manager.rst:2
msgid "aiaccel.manager package"
msgstr ""

#: ../../source/api_reference/aiaccel.manager.rst:5
msgid "Subpackages"
msgstr ""

#: ../../source/api_reference/aiaccel.manager.rst:13
msgid "Submodules"
msgstr ""

#: ../../source/api_reference/aiaccel.manager.rst:16
msgid "aiaccel.manager.abci\\_manager module"
msgstr ""

#: aiaccel.manager.abci_manager.AbciManager:1
#: aiaccel.manager.local_manager.LocalManager:1
#: aiaccel.manager.mpi_manager.MpiManager:1
#: aiaccel.manager.pylocal_manager.PylocalManager:1 of
msgid "ベースクラス: :py:class:`~aiaccel.manager.abstract_manager.AbstractManager`"
msgstr ""

#: aiaccel.manager.abci_manager.AbciManager:1 of
msgid "A manager class running on ABCI environment."
msgstr ""

#: aiaccel.manager.abci_manager.AbciManager.create_model:1
#: aiaccel.manager.abstract_manager.AbstractManager.create_model:1
#: aiaccel.manager.local_manager.LocalManager.create_model:1
#: aiaccel.manager.mpi_manager.MpiManager.create_model:1
#: aiaccel.manager.pylocal_manager.PylocalManager.create_model:1 of
msgid "Creates model object of state machine."
msgstr ""

#: aiaccel.manager.abci_manager.AbciManager.create_model
#: aiaccel.manager.abci_manager.AbciManager.parse_trial_id
#: aiaccel.manager.abstract_manager.AbstractManager
#: aiaccel.manager.abstract_manager.AbstractManager.all_parameters_processed
#: aiaccel.manager.abstract_manager.AbstractManager.all_parameters_registered
#: aiaccel.manager.abstract_manager.AbstractManager.create_model
#: aiaccel.manager.abstract_manager.AbstractManager.evaluate
#: aiaccel.manager.abstract_manager.AbstractManager.get_available_pool_size
#: aiaccel.manager.abstract_manager.AbstractManager.inner_loop_main_process
#: aiaccel.manager.abstract_manager.AbstractManager.is_error_free
#: aiaccel.manager.abstract_manager.AbstractManager.pre_process
#: aiaccel.manager.abstract_manager.AbstractManager.resume
#: aiaccel.manager.abstract_manager.AbstractManager.search_hyperparameters
#: aiaccel.manager.abstract_manager.AbstractManager.start_job
#: aiaccel.manager.abstract_manager.AbstractManager.update_trial_number
#: aiaccel.manager.create.create_manager aiaccel.manager.job.job.Job.set_state
#: aiaccel.manager.job.model.abci_model.AbciModel.create_abci_batch_file
#: aiaccel.manager.job.model.abci_model.AbciModel.create_qsub_command
#: aiaccel.manager.job.model.abci_model.AbciModel.file_create
#: aiaccel.manager.job.model.abci_model.AbciModel.generate_command_line
#: aiaccel.manager.job.model.abci_model.AbciModel.job_submitted
#: aiaccel.manager.job.model.abci_model.AbciModel.runner_create
#: aiaccel.manager.job.model.local_model.LocalModel.conditions_job_finished
#: aiaccel.manager.job.model.local_model.LocalModel.create_runner_command
#: aiaccel.manager.job.model.local_model.LocalModel.job_submitted
#: aiaccel.manager.job.model.local_model.LocalModel.stop_job
#: aiaccel.manager.job.model.local_model.LocalModel.write_results_to_database
#: aiaccel.manager.local_manager.LocalManager.create_model
#: aiaccel.manager.local_manager.LocalManager.get_any_trial_xs
#: aiaccel.manager.local_manager.LocalManager.parse_trial_id
#: aiaccel.manager.mpi_manager.MpiManager.create_model
#: aiaccel.manager.pylocal_manager.PylocalManager.create_model
#: aiaccel.manager.pylocal_manager.PylocalManager.get_any_trial_xs
#: aiaccel.manager.pylocal_manager.PylocalManager.write_error
#: aiaccel.manager.pylocal_manager.execute
#: aiaccel.manager.pylocal_manager.initializer of
msgid "パラメータ"
msgstr ""

#: aiaccel.manager.abci_manager.AbciManager.create_model
#: aiaccel.manager.abci_manager.AbciManager.parse_trial_id
#: aiaccel.manager.abstract_manager.AbstractManager.all_parameters_processed
#: aiaccel.manager.abstract_manager.AbstractManager.all_parameters_registered
#: aiaccel.manager.abstract_manager.AbstractManager.create_model
#: aiaccel.manager.abstract_manager.AbstractManager.evaluate
#: aiaccel.manager.abstract_manager.AbstractManager.get_available_pool_size
#: aiaccel.manager.abstract_manager.AbstractManager.inner_loop_main_process
#: aiaccel.manager.abstract_manager.AbstractManager.is_error_free
#: aiaccel.manager.abstract_manager.AbstractManager.post_process
#: aiaccel.manager.abstract_manager.AbstractManager.pre_process
#: aiaccel.manager.abstract_manager.AbstractManager.resume
#: aiaccel.manager.abstract_manager.AbstractManager.search_hyperparameters
#: aiaccel.manager.abstract_manager.AbstractManager.start_job
#: aiaccel.manager.abstract_manager.AbstractManager.update_trial_number
#: aiaccel.manager.create.create_manager
#: aiaccel.manager.job.job.Job.get_job_elapsed_time_in_seconds
#: aiaccel.manager.job.job.Job.get_state_name
#: aiaccel.manager.job.job.Job.is_timeout aiaccel.manager.job.job.Job.main
#: aiaccel.manager.job.model.abci_model.AbciModel.create_abci_batch_file
#: aiaccel.manager.job.model.abci_model.AbciModel.create_qsub_command
#: aiaccel.manager.job.model.abci_model.AbciModel.file_create
#: aiaccel.manager.job.model.abci_model.AbciModel.generate_command_line
#: aiaccel.manager.job.model.abci_model.AbciModel.job_submitted
#: aiaccel.manager.job.model.abci_model.AbciModel.runner_create
#: aiaccel.manager.job.model.local_model.LocalModel.conditions_job_finished
#: aiaccel.manager.job.model.local_model.LocalModel.create_runner_command
#: aiaccel.manager.job.model.local_model.LocalModel.job_submitted
#: aiaccel.manager.job.model.local_model.LocalModel.stop_job
#: aiaccel.manager.job.model.local_model.LocalModel.write_results_to_database
#: aiaccel.manager.local_manager.LocalManager.create_model
#: aiaccel.manager.local_manager.LocalManager.get_any_trial_xs
#: aiaccel.manager.local_manager.LocalManager.parse_trial_id
#: aiaccel.manager.mpi_manager.MpiManager.create_model
#: aiaccel.manager.pylocal_manager.PylocalManager.create_model
#: aiaccel.manager.pylocal_manager.PylocalManager.get_any_trial_xs
#: aiaccel.manager.pylocal_manager.PylocalManager.inner_loop_main_process
#: aiaccel.manager.pylocal_manager.PylocalManager.post_process
#: aiaccel.manager.pylocal_manager.PylocalManager.write_error
#: aiaccel.manager.pylocal_manager.execute
#: aiaccel.manager.pylocal_manager.initializer of
msgid "戻り値"
msgstr ""

#: aiaccel.manager.abci_manager.AbciManager.create_model:5
#: aiaccel.manager.local_manager.LocalManager.create_model:5
#: aiaccel.manager.mpi_manager.MpiManager.create_model:5 of
msgid "Model object."
msgstr ""

#: aiaccel.manager.abci_manager.AbciManager.create_model
#: aiaccel.manager.abci_manager.AbciManager.parse_trial_id
#: aiaccel.manager.abstract_manager.AbstractManager.all_parameters_processed
#: aiaccel.manager.abstract_manager.AbstractManager.all_parameters_registered
#: aiaccel.manager.abstract_manager.AbstractManager.create_model
#: aiaccel.manager.abstract_manager.AbstractManager.get_available_pool_size
#: aiaccel.manager.abstract_manager.AbstractManager.inner_loop_main_process
#: aiaccel.manager.abstract_manager.AbstractManager.is_error_free
#: aiaccel.manager.abstract_manager.AbstractManager.start_job
#: aiaccel.manager.create.create_manager
#: aiaccel.manager.job.job.Job.get_job_elapsed_time_in_seconds
#: aiaccel.manager.job.job.Job.get_state_name
#: aiaccel.manager.job.job.Job.is_timeout
#: aiaccel.manager.job.model.abci_model.AbciModel.create_qsub_command
#: aiaccel.manager.job.model.abci_model.AbciModel.generate_command_line
#: aiaccel.manager.job.model.local_model.LocalModel.conditions_job_finished
#: aiaccel.manager.job.model.local_model.LocalModel.create_runner_command
#: aiaccel.manager.local_manager.LocalManager.create_model
#: aiaccel.manager.local_manager.LocalManager.get_any_trial_xs
#: aiaccel.manager.local_manager.LocalManager.parse_trial_id
#: aiaccel.manager.mpi_manager.MpiManager.create_model
#: aiaccel.manager.pylocal_manager.PylocalManager.create_model
#: aiaccel.manager.pylocal_manager.PylocalManager.get_any_trial_xs
#: aiaccel.manager.pylocal_manager.PylocalManager.inner_loop_main_process
#: aiaccel.manager.pylocal_manager.execute of
msgid "戻り値の型"
msgstr ""

#: aiaccel.manager.abci_manager.AbciManager.parse_trial_id:1
#: aiaccel.manager.local_manager.LocalManager.parse_trial_id:1 of
msgid "Parse a command string and extract an unique name."
msgstr ""

#: aiaccel.manager.abci_manager.AbciManager.parse_trial_id:3
#: aiaccel.manager.local_manager.LocalManager.parse_trial_id:3 of
msgid "A command string from ps command."
msgstr ""

#: aiaccel.manager.abci_manager.AbciManager.parse_trial_id:6
#: aiaccel.manager.local_manager.LocalManager.parse_trial_id:6 of
msgid "An unique name."
msgstr ""

#: ../../source/api_reference/aiaccel.manager.rst:24
msgid "aiaccel.manager.abstract\\_manager module"
msgstr ""

#: aiaccel.manager.abstract_manager.AbstractManager:1 of
msgid "ベースクラス: :py:class:`~aiaccel.module.AbstractModule`"
msgstr ""

#: aiaccel.manager.abstract_manager.AbstractManager:1 of
msgid "An abstract class for AbciManager and LocalManager."
msgstr ""

#: aiaccel.manager.abstract_manager.AbstractManager:3 of
msgid "A dictionary containing command line options."
msgstr ""

#: aiaccel.manager.abstract_manager.AbstractManager:9 of
msgid "An optimizer object."
msgstr ""

#: aiaccel.manager.abstract_manager.AbstractManager of
msgid "type"
msgstr ""

#: aiaccel.manager.abstract_manager.AbstractManager:11 of
msgid "AbstractOptimizer"
msgstr ""

#: aiaccel.manager.abstract_manager.AbstractManager:15 of
msgid "The number of workers."
msgstr ""

#: aiaccel.manager.abstract_manager.AbstractManager:17
#: aiaccel.manager.abstract_manager.AbstractManager:23
#: aiaccel.manager.abstract_manager.AbstractManager:47
#: aiaccel.manager.abstract_manager.AbstractManager:59 of
msgid "int"
msgstr ""

#: aiaccel.manager.abstract_manager.AbstractManager:21
#: aiaccel.manager.abstract_manager.AbstractManager.update_trial_number:3 of
msgid "The maximum number of trials."
msgstr ""

#: aiaccel.manager.abstract_manager.AbstractManager:27 of
msgid "A list of statistics."
msgstr ""

#: aiaccel.manager.abstract_manager.AbstractManager:29
#: aiaccel.manager.abstract_manager.AbstractManager:35 of
msgid "list[Any]"
msgstr ""

#: aiaccel.manager.abstract_manager.AbstractManager:33 of
msgid "A list of jobs."
msgstr ""

#: aiaccel.manager.abstract_manager.AbstractManager:39 of
msgid "A dictionary of job status."
msgstr ""

#: aiaccel.manager.abstract_manager.AbstractManager:41 of
msgid "dict[Any, Any]"
msgstr ""

#: aiaccel.manager.abstract_manager.AbstractManager:45 of
msgid "The start trial id."
msgstr ""

#: aiaccel.manager.abstract_manager.AbstractManager:51 of
msgid "A buffer object."
msgstr ""

#: aiaccel.manager.abstract_manager.AbstractManager:53 of
msgid "Buffer"
msgstr ""

#: aiaccel.manager.abstract_manager.AbstractManager:57 of
msgid "The number of completed jobs."
msgstr ""

#: aiaccel.manager.abstract_manager.AbstractManager.all_parameters_processed:1
#: of
msgid "Checks whether any unprocessed parameters are left."
msgstr ""

#: aiaccel.manager.abstract_manager.AbstractManager.all_parameters_processed:3
#: of
msgid ""
"This method is beneficial for the case that the maximum number of "
"parameter generation is limited by algorithm (e.g. grid search). To make "
"this method effective, the algorithm with the parameter generation limit "
"should turn `all_parameters_generated` True when all of available "
"parameters are generated."
msgstr ""

#: aiaccel.manager.abstract_manager.AbstractManager.all_parameters_processed:9
#: aiaccel.manager.abstract_manager.AbstractManager.all_parameters_registered:7
#: aiaccel.manager.abstract_manager.AbstractManager.get_available_pool_size:3
#: aiaccel.manager.abstract_manager.AbstractManager.search_hyperparameters:3 of
msgid "The number of ready jobs."
msgstr ""

#: aiaccel.manager.abstract_manager.AbstractManager.all_parameters_processed:11
#: aiaccel.manager.abstract_manager.AbstractManager.all_parameters_registered:9
#: aiaccel.manager.abstract_manager.AbstractManager.get_available_pool_size:5
#: aiaccel.manager.abstract_manager.AbstractManager.search_hyperparameters:5 of
msgid "The number of running jobs."
msgstr ""

#: aiaccel.manager.abstract_manager.AbstractManager.all_parameters_processed:14
#: of
msgid "True if all parameters are generated and are processed."
msgstr ""

#: aiaccel.manager.abstract_manager.AbstractManager.all_parameters_registered:1
#: of
msgid ""
"Checks whether all parameters that can be generated with the given number"
" of trials are registered."
msgstr ""

#: aiaccel.manager.abstract_manager.AbstractManager.all_parameters_registered:4
#: of
msgid ""
"This method does not check whether the registered parameters have been "
"processed."
msgstr ""

#: aiaccel.manager.abstract_manager.AbstractManager.all_parameters_registered:11
#: aiaccel.manager.abstract_manager.AbstractManager.get_available_pool_size:7
#: aiaccel.manager.abstract_manager.AbstractManager.search_hyperparameters:7 of
msgid "The number of finished jobs."
msgstr ""

#: aiaccel.manager.abstract_manager.AbstractManager.all_parameters_registered:14
#: of
msgid "True if all parameters are registerd."
msgstr ""

#: aiaccel.manager.abstract_manager.AbstractManager.create_model:3 of
msgid ""
"Override with a Manager that uses a Model. For example, LocalManager, "
"AbciManager, etc. By the way, PylocalManager does not use Model."
msgstr ""

#: aiaccel.manager.abstract_manager.AbstractManager.create_model:9 of
msgid ""
"LocalModel object.  Should return None. For that purpose, it is necessary"
" to modify TestAbstractManager etc significantly. So it returns "
"LocalModel.  # TODO: Fix TestAbstractManager etc to return None."
msgstr ""

#: aiaccel.manager.abstract_manager.AbstractManager.create_model:9 of
msgid "LocalModel object."
msgstr ""

#: aiaccel.manager.abstract_manager.AbstractManager.create_model:11 of
msgid ""
"Should return None. For that purpose, it is necessary to modify "
"TestAbstractManager etc significantly. So it returns LocalModel."
msgstr ""

#: aiaccel.manager.abstract_manager.AbstractManager.create_model:15 of
msgid "# TODO: Fix TestAbstractManager etc to return None."
msgstr ""

#: aiaccel.manager.abstract_manager.AbstractManager.evaluate:1 of
msgid "Evaluate the result of optimization."
msgstr ""

#: aiaccel.manager.abstract_manager.AbstractManager.evaluate:5
#: aiaccel.manager.abstract_manager.AbstractManager.post_process:3
#: aiaccel.manager.abstract_manager.AbstractManager.pre_process:5
#: aiaccel.manager.abstract_manager.AbstractManager.resume:5
#: aiaccel.manager.abstract_manager.AbstractManager.search_hyperparameters:10
#: aiaccel.manager.abstract_manager.AbstractManager.update_trial_number:6
#: aiaccel.manager.job.job.Job.main:3
#: aiaccel.manager.job.model.abci_model.AbciModel.create_abci_batch_file:9
#: aiaccel.manager.job.model.abci_model.AbciModel.file_create:11
#: aiaccel.manager.job.model.abci_model.AbciModel.job_submitted:6
#: aiaccel.manager.job.model.abci_model.AbciModel.runner_create:6
#: aiaccel.manager.job.model.local_model.LocalModel.job_submitted:6
#: aiaccel.manager.job.model.local_model.LocalModel.stop_job:6
#: aiaccel.manager.job.model.local_model.LocalModel.write_results_to_database:6
#: aiaccel.manager.pylocal_manager.PylocalManager.post_process:3
#: aiaccel.manager.pylocal_manager.PylocalManager.write_error:8
#: aiaccel.manager.pylocal_manager.initializer:6 of
msgid "None"
msgstr ""

#: aiaccel.manager.abstract_manager.AbstractManager.get_available_pool_size:1
#: of
msgid "Get the number of available pool size."
msgstr ""

#: aiaccel.manager.abstract_manager.AbstractManager.get_available_pool_size:10
#: of
msgid "The number of available pool size."
msgstr ""

#: aiaccel.manager.abstract_manager.AbstractManager.inner_loop_main_process:1
#: aiaccel.manager.pylocal_manager.PylocalManager.inner_loop_main_process:1 of
msgid "A main loop process. This process is repeated every main loop."
msgstr ""

#: aiaccel.manager.abstract_manager.AbstractManager.inner_loop_main_process:5
#: aiaccel.manager.pylocal_manager.PylocalManager.inner_loop_main_process:3 of
msgid "The process succeeds or not. The main loop exits if failed."
msgstr ""

#: aiaccel.manager.abstract_manager.AbstractManager.is_error_free:1 of
msgid "Check if all trials are error free."
msgstr ""

#: aiaccel.manager.abstract_manager.AbstractManager.is_error_free:5 of
msgid "True if all trials are error free."
msgstr ""

#: aiaccel.manager.abstract_manager.AbstractManager.post_process:1
#: aiaccel.manager.pylocal_manager.PylocalManager.post_process:1 of
msgid "Post-procedure after executed processes."
msgstr ""

#: aiaccel.manager.abstract_manager.AbstractManager.pre_process:1 of
msgid "Pre-procedure before executing processes."
msgstr ""

#: aiaccel.manager.abstract_manager.AbstractManager.resume:1 of
msgid "When in resume mode, load the previous optimization data in advance."
msgstr ""

#: aiaccel.manager.abstract_manager.AbstractManager.search_hyperparameters:1 of
msgid "Start hyper parameter optimization."
msgstr ""

#: aiaccel.manager.abstract_manager.AbstractManager.start_job:1 of
msgid "Start a new job."
msgstr ""

#: aiaccel.manager.abstract_manager.AbstractManager.start_job:3 of
msgid "A parameter file path"
msgstr ""

#: aiaccel.manager.abstract_manager.AbstractManager.start_job:6 of
msgid ""
"A reference for created job. It returns None if specified hyper parameter"
" file already exists."
msgstr ""

#: aiaccel.manager.abstract_manager.AbstractManager.update_trial_number:1 of
msgid "Updates the maximum number of trials."
msgstr ""

#: ../../source/api_reference/aiaccel.manager.rst:32
msgid "aiaccel.manager.create module"
msgstr ""

#: aiaccel.manager.create.create_manager:1 of
msgid "Returns manager type."
msgstr ""

#: aiaccel.manager.create.create_manager:3 of
msgid "Path to configuration file."
msgstr ""

#: aiaccel.manager.create.create_manager of
msgid "例外"
msgstr ""

#: aiaccel.manager.create.create_manager:6 of
msgid "Causes when specified resource type is invalid."
msgstr ""

#: aiaccel.manager.create.create_manager:8 of
msgid ""
"`LocalManager` , `PylocalManager` , or `AbciManager` if resource type is "
"'local', 'python_local', or 'abci', respectively."
msgstr ""

#: ../../source/api_reference/aiaccel.manager.rst:40
msgid "aiaccel.manager.local\\_manager module"
msgstr ""

#: aiaccel.manager.local_manager.LocalManager:1
#: aiaccel.manager.pylocal_manager.PylocalManager:1 of
msgid "A manager class running on a local computer."
msgstr ""

#: aiaccel.manager.local_manager.LocalManager.get_any_trial_xs:1
#: aiaccel.manager.pylocal_manager.PylocalManager.get_any_trial_xs:1 of
msgid "Gets a parameter list of specific trial ID from Storage object."
msgstr ""

#: aiaccel.manager.local_manager.LocalManager.get_any_trial_xs:3
#: aiaccel.manager.pylocal_manager.PylocalManager.get_any_trial_xs:3
#: aiaccel.manager.pylocal_manager.PylocalManager.write_error:3 of
msgid "Trial ID."
msgstr ""

#: aiaccel.manager.local_manager.LocalManager.get_any_trial_xs:6
#: aiaccel.manager.pylocal_manager.PylocalManager.get_any_trial_xs:6 of
msgid ""
"A dictionary of parameters. None if the parameter     specified by the "
"given trial ID is not registered."
msgstr ""

#: aiaccel.manager.local_manager.LocalManager.get_any_trial_xs:8
#: aiaccel.manager.pylocal_manager.PylocalManager.get_any_trial_xs:8 of
msgid "A dictionary of parameters. None if the parameter"
msgstr ""

#: aiaccel.manager.local_manager.LocalManager.get_any_trial_xs:9
#: aiaccel.manager.pylocal_manager.PylocalManager.get_any_trial_xs:9 of
msgid "specified by the given trial ID is not registered."
msgstr ""

#: ../../source/api_reference/aiaccel.manager.rst:48
msgid "aiaccel.manager.mpi\\_manager module"
msgstr ""

#: aiaccel.manager.mpi_manager.MpiManager:1 of
msgid "A manager class running on a mpi systems."
msgstr ""

#: ../../source/api_reference/aiaccel.manager.rst:56
msgid "aiaccel.manager.pylocal\\_manager module"
msgstr ""

#: aiaccel.manager.pylocal_manager.PylocalManager.create_model:5 of
msgid "Because it does not use the state transition model."
msgstr ""

#: aiaccel.manager.pylocal_manager.PylocalManager.write_error:1 of
msgid "Writes error output to a file."
msgstr ""

#: aiaccel.manager.pylocal_manager.PylocalManager.write_error:5 of
msgid "Error string."
msgstr ""

#: aiaccel.manager.pylocal_manager.execute:1 of
msgid "Executes the specified function with the specified arguments."
msgstr ""

#: aiaccel.manager.job.model.abci_model.AbciModel.generate_command_line:5
#: aiaccel.manager.pylocal_manager.execute:3 of
msgid "Arguments."
msgstr ""

#: aiaccel.manager.pylocal_manager.execute:6 of
msgid "Trial ID, arguments, objective value, error string, start time, end time."
msgstr ""

#: aiaccel.manager.pylocal_manager.initializer:1 of
msgid "Initializer for multiprocessing.Pool."
msgstr ""

#: aiaccel.manager.pylocal_manager.initializer:3 of
msgid "Path to the configuration file."
msgstr ""

#: ../../source/api_reference/aiaccel.manager.rst:64
msgid "Module contents"
msgstr ""

#: aiaccel.manager.job.model.abci_model.AbciModel:1
#: aiaccel.manager.job.model.local_model.LocalModel:1 of
msgid ""
"ベースクラス: "
":py:class:`~aiaccel.manager.job.model.abstract_model.AbstractModel`"
msgstr ""

#: aiaccel.manager.job.model.abci_model.AbciModel.create_abci_batch_file:1
#: aiaccel.manager.job.model.abci_model.AbciModel.runner_create:1 of
msgid "Create a ABCI batch file."
msgstr ""

#: aiaccel.manager.job.model.abci_model.AbciModel.create_abci_batch_file:3 of
msgid ""
"The 'job_script_preamble' is a base of the ABCI batch file. At first, "
"loads 'job_script_preamble', and adds the 'commands' to the loaded "
"contents. Finally, writes the contents to 'runner_file_path'."
msgstr ""

#: aiaccel.manager.job.model.abci_model.AbciModel.create_qsub_command:1 of
msgid "Create ABCI 'qsub' command."
msgstr ""

#: aiaccel.manager.job.model.abci_model.AbciModel.create_qsub_command:3 of
msgid "A Config object."
msgstr ""

#: aiaccel.manager.job.model.abci_model.AbciModel.create_qsub_command:5 of
msgid "A path of 'qsub' batch file."
msgstr ""

#: aiaccel.manager.job.model.abci_model.AbciModel.create_qsub_command:8 of
msgid "A list to run 'qsub' command."
msgstr ""

#: aiaccel.manager.job.model.abci_model.AbciModel.file_create:1 of
msgid "Create a text file."
msgstr ""

#: aiaccel.manager.job.model.abci_model.AbciModel.file_create:3 of
msgid "The path of the created file."
msgstr ""

#: aiaccel.manager.job.model.abci_model.AbciModel.file_create:5 of
msgid "The content of the created file."
msgstr ""

#: aiaccel.manager.job.model.abci_model.AbciModel.file_create:7 of
msgid "The path to store lock files. Defaults to None."
msgstr ""

#: aiaccel.manager.job.model.abci_model.AbciModel.generate_command_line:1 of
msgid "Generate a command line."
msgstr ""

#: aiaccel.manager.job.model.abci_model.AbciModel.generate_command_line:3 of
msgid "A command."
msgstr ""

#: aiaccel.manager.job.model.abci_model.AbciModel.generate_command_line:8 of
msgid "A command line."
msgstr ""

#: aiaccel.manager.job.model.abci_model.AbciModel.job_submitted:1
#: aiaccel.manager.job.model.local_model.LocalModel.job_submitted:1 of
msgid "Submit a job."
msgstr ""

#: aiaccel.manager.job.model.abci_model.AbciModel.job_submitted:3
#: aiaccel.manager.job.model.abci_model.AbciModel.runner_create:3
#: aiaccel.manager.job.model.local_model.LocalModel.conditions_job_finished:3
#: aiaccel.manager.job.model.local_model.LocalModel.job_submitted:3
#: aiaccel.manager.job.model.local_model.LocalModel.stop_job:3 of
msgid "A job object."
msgstr ""

#: aiaccel.manager.job.job.Job:1
#: aiaccel.manager.job.model.abstract_model.AbstractModel:1 of
msgid "ベースクラス: :py:class:`object`"
msgstr ""

#: aiaccel.manager.job.job.CustomMachine:1 of
msgid "ベースクラス: :py:class:`~transitions.core.Machine`"
msgstr ""

#: aiaccel.manager.job.job.Job:1 of
msgid "A job thread to manage running jobs on local computer or ABCI."
msgstr ""

#: aiaccel.manager.job.job.Job.get_job_elapsed_time_in_seconds:1 of
msgid "Get a job elapsed time in seconds."
msgstr ""

#: aiaccel.manager.job.job.Job.get_job_elapsed_time_in_seconds:3 of
msgid "A job elapsed time in seconds."
msgstr ""

#: aiaccel.manager.job.job.Job.get_state_name:1 of
msgid "Get a current state name."
msgstr ""

#: aiaccel.manager.job.job.Job.get_state_name:3 of
msgid "A current state name."
msgstr ""

#: aiaccel.manager.job.job.Job.is_timeout:1 of
msgid "Check if a job is timeout."
msgstr ""

#: aiaccel.manager.job.job.Job.is_timeout:3 of
msgid "True if a job is timeout."
msgstr ""

#: aiaccel.manager.job.job.Job.main:1 of
msgid "Thread.run method."
msgstr ""

#: aiaccel.manager.job.job.Job.set_state:1 of
msgid "Set a current state."
msgstr ""

#: aiaccel.manager.job.job.Job.set_state:3 of
msgid "A current state."
msgstr ""

#: aiaccel.manager.job.job.Job.write_end_time_to_storage:1 of
msgid "Set an end time."
msgstr ""

#: aiaccel.manager.job.job.Job.write_job_success_or_failed_to_storage:1 of
msgid "Write a job success or failed to the database."
msgstr ""

#: aiaccel.manager.job.job.Job.write_start_time_to_storage:1 of
msgid "Set a start time."
msgstr ""

#: aiaccel.manager.job.job.Job.write_state_to_storage:1 of
msgid "Write a current state to the database."
msgstr ""

#: aiaccel.manager.job.model.local_model.LocalModel.conditions_job_finished:1
#: of
msgid "Check if a job is finished."
msgstr ""

#: aiaccel.manager.job.model.local_model.LocalModel.conditions_job_finished:6
#: of
msgid "True if a job is finished."
msgstr ""

#: aiaccel.manager.job.model.local_model.LocalModel.create_runner_command:1 of
msgid "Create a list of command strings to run a hyper parameter."
msgstr ""

#: aiaccel.manager.job.model.local_model.LocalModel.create_runner_command:3 of
msgid "A string command."
msgstr ""

#: aiaccel.manager.job.model.local_model.LocalModel.create_runner_command:5 of
msgid "A hyper parameter content."
msgstr ""

#: aiaccel.manager.job.model.local_model.LocalModel.create_runner_command:7 of
msgid "A unique name of a hyper parameter."
msgstr ""

#: aiaccel.manager.job.model.local_model.LocalModel.create_runner_command:9 of
msgid "A path to a config file."
msgstr ""

#: aiaccel.manager.job.model.local_model.LocalModel.create_runner_command:11 of
msgid "A path to a error output file."
msgstr ""

#: aiaccel.manager.job.model.local_model.LocalModel.create_runner_command:13 of
msgid "A flag to enable variable name argumentation."
msgstr ""

#: aiaccel.manager.job.model.local_model.LocalModel.create_runner_command:16 of
msgid "A list of command strings."
msgstr ""

#: aiaccel.manager.job.model.local_model.LocalModel.stop_job:1 of
msgid "Stop a job."
msgstr ""

#: aiaccel.manager.job.model.local_model.LocalModel.write_results_to_database:1
#: of
msgid "Create result file."
msgstr ""

#: aiaccel.manager.job.model.local_model.LocalModel.write_results_to_database:3
#: of
msgid "Job object."
msgstr ""

