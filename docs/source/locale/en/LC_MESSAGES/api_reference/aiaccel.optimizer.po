# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, AIST
# This file is distributed under the same license as the aiaccel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: aiaccel \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-02-15 12:16+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"

#: ../../source/api_reference/aiaccel.optimizer.rst:2
msgid "aiaccel.optimizer package"
msgstr ""

#: ../../source/api_reference/aiaccel.optimizer.rst:5
msgid "Submodules"
msgstr ""

#: ../../source/api_reference/aiaccel.optimizer.rst:8
msgid "aiaccel.optimizer.abstract\\_optimizer module"
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer:1 of
msgid "ベースクラス: :py:class:`~aiaccel.module.AbstractModule`"
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer:1 of
msgid "An abstract class for Optimizer classes."
msgstr ""

#: aiaccel.optimizer._nelder_mead.NelderMead
#: aiaccel.optimizer._nelder_mead.NelderMead.add_result_parameters
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.cast
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.register_new_parameters
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.resume
#: aiaccel.optimizer.create.create_optimizer
#: aiaccel.optimizer.create.import_and_getattr
#: aiaccel.optimizer.grid_optimizer.GridOptimizer
#: aiaccel.optimizer.grid_optimizer.generate_grid_points
#: aiaccel.optimizer.grid_optimizer.get_grid_options
#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer
#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.nelder_mead_main
#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.update_ready_parameter_name
#: aiaccel.optimizer.sobol_optimizer.SobolOptimizer
#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer
#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer.generate_parameter
#: aiaccel.optimizer.tpe_optimizer.create_distributions of
msgid "パラメータ"
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer:3
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer:9
#: aiaccel.optimizer.grid_optimizer.GridOptimizer:3
#: aiaccel.optimizer.sobol_optimizer.SobolOptimizer:3
#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer:3 of
msgid "A dictionary containing command line options."
msgstr ""

#: aiaccel.optimizer._nelder_mead.NelderMead
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer
#: aiaccel.optimizer.grid_optimizer.GridOptimizer
#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer
#: aiaccel.optimizer.sobol_optimizer.SobolOptimizer
#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer of
msgid "type"
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer:12 of
msgid "dict[str, str | int | bool]"
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer:16 of
msgid "A ready number of hyper parameters."
msgstr ""

#: aiaccel.optimizer._nelder_mead.NelderMead:72
#: aiaccel.optimizer._nelder_mead.NelderMead:84
#: aiaccel.optimizer._nelder_mead.NelderMead:128
#: aiaccel.optimizer._nelder_mead.NelderMead:134
#: aiaccel.optimizer._nelder_mead.NelderMead:160
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer:18
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer:24
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer:30
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer:37
#: aiaccel.optimizer.grid_optimizer.GridOptimizer:17
#: aiaccel.optimizer.sobol_optimizer.SobolOptimizer:11
#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer:50 of
msgid "int"
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer:22 of
msgid "A running number of hyper prameters."
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer:28 of
msgid "A finished number of hyper parameters."
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer:34 of
msgid "A number of generated hyper paramters."
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer:41 of
msgid "A boolean indicating if all parameters are generated or not."
msgstr ""

#: aiaccel.optimizer._nelder_mead.NelderMead:121
#: aiaccel.optimizer._nelder_mead.NelderMead:141
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer:44 of
msgid "bool"
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer:48 of
msgid "Loaded hyper parameter configuration object."
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer:51 of
msgid "HyperParameterConfiguration"
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer:55 of
msgid "TrialId object."
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer:57 of
msgid "TrialId"
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.cast:1 of
msgid "Casts types of parameter values to appropriate tepes."
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.cast:3 of
msgid "list of parameters."
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.cast
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.generate_parameter
#: aiaccel.optimizer.grid_optimizer.generate_grid_points
#: aiaccel.optimizer.grid_optimizer.get_grid_options
#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.generate_parameter
#: aiaccel.optimizer.tpe_optimizer.create_distributions of
msgid "例外"
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.cast:6 of
msgid "Occurs if any of parameter value could not be casted."
msgstr ""

#: aiaccel.optimizer._nelder_mead.NelderMead.add_result_parameters
#: aiaccel.optimizer._nelder_mead.NelderMead.search
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.cast
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.check_error
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.generate_initial_parameter
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.generate_new_parameter
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.generate_parameter
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.get_pool_size
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.inner_loop_main_process
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.post_process
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.pre_process
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.register_new_parameters
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.resume
#: aiaccel.optimizer.create.create_optimizer
#: aiaccel.optimizer.create.import_and_getattr
#: aiaccel.optimizer.grid_optimizer.GridOptimizer.generate_initial_parameter
#: aiaccel.optimizer.grid_optimizer.GridOptimizer.generate_parameter
#: aiaccel.optimizer.grid_optimizer.GridOptimizer.get_parameter_index
#: aiaccel.optimizer.grid_optimizer.GridOptimizer.pre_process
#: aiaccel.optimizer.grid_optimizer.generate_grid_points
#: aiaccel.optimizer.grid_optimizer.get_grid_options
#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.generate_initial_parameter
#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.generate_parameter
#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.get_nm_results
#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.get_ready_parameters
#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.nelder_mead_main
#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.update_ready_parameter_name
#: aiaccel.optimizer.random_optimizer.RandomOptimizer.generate_parameter
#: aiaccel.optimizer.sobol_optimizer.SobolOptimizer.generate_initial_parameter
#: aiaccel.optimizer.sobol_optimizer.SobolOptimizer.generate_parameter
#: aiaccel.optimizer.sobol_optimizer.SobolOptimizer.pre_process
#: aiaccel.optimizer.tpe_optimizer.TPESamplerWrapper.get_startup_trials
#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer.check_result
#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer.create_study
#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer.generate_initial_parameter
#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer.generate_parameter
#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer.is_startup_trials
#: aiaccel.optimizer.tpe_optimizer.create_distributions of
msgid "戻り値"
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.cast:8 of
msgid "A list of parameters with casted values. None if given `params` is None."
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.cast
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.check_error
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.generate_initial_parameter
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.generate_new_parameter
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.generate_parameter
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.get_pool_size
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.inner_loop_main_process
#: aiaccel.optimizer.create.create_optimizer
#: aiaccel.optimizer.create.import_and_getattr
#: aiaccel.optimizer.grid_optimizer.GridOptimizer.generate_initial_parameter
#: aiaccel.optimizer.grid_optimizer.GridOptimizer.generate_parameter
#: aiaccel.optimizer.grid_optimizer.GridOptimizer.get_parameter_index
#: aiaccel.optimizer.grid_optimizer.generate_grid_points
#: aiaccel.optimizer.grid_optimizer.get_grid_options
#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.generate_initial_parameter
#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.generate_parameter
#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.get_nm_results
#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.nelder_mead_main
#: aiaccel.optimizer.random_optimizer.RandomOptimizer.generate_parameter
#: aiaccel.optimizer.sobol_optimizer.SobolOptimizer.generate_initial_parameter
#: aiaccel.optimizer.sobol_optimizer.SobolOptimizer.generate_parameter
#: aiaccel.optimizer.tpe_optimizer.TPESamplerWrapper.get_startup_trials
#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer.generate_initial_parameter
#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer.generate_parameter
#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer.is_startup_trials
#: aiaccel.optimizer.tpe_optimizer.create_distributions of
msgid "戻り値の型"
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.check_error:1 of
msgid "Checks errors."
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.check_error:3 of
msgid "True if there is no error."
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.generate_initial_parameter:1
#: of
msgid "Generate a list of initial parameters."
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.generate_initial_parameter:3
#: of
msgid "A created list of initial parameters."
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.generate_new_parameter:1
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.generate_parameter:1
#: of
msgid "Generate a list of parameters."
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.generate_new_parameter:3
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.generate_parameter:5
#: of
msgid "A created list of parameters."
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.generate_parameter:3
#: of
msgid "Causes when the inherited class does not     implement."
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.get_pool_size:1 of
msgid "Returns pool size."
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.get_pool_size:3 of
msgid "Pool size."
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.inner_loop_main_process:1
#: of
msgid "A main loop process. This process is repeated every main loop."
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.inner_loop_main_process:3
#: of
msgid "The process succeeds or not. The main loop exits if failed."
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.post_process:1
#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer.post_process:1 of
msgid "Post-procedure after executed processes."
msgstr ""

#: aiaccel.optimizer._nelder_mead.NelderMead.add_result_parameters:6
#: aiaccel.optimizer._nelder_mead.NelderMead.search:28
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.post_process:3
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.pre_process:3
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.register_new_parameters:7
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.resume:5
#: aiaccel.optimizer.grid_optimizer.GridOptimizer.pre_process:3
#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.update_ready_parameter_name:8
#: aiaccel.optimizer.sobol_optimizer.SobolOptimizer.pre_process:3
#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer.check_result:3
#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer.create_study:3 of
msgid "None"
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.pre_process:1
#: aiaccel.optimizer.grid_optimizer.GridOptimizer.pre_process:1
#: aiaccel.optimizer.sobol_optimizer.SobolOptimizer.pre_process:1 of
msgid "Pre-procedure before executing processes."
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.register_new_parameters:1
#: of
msgid "Create hyper parameter files."
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.register_new_parameters:3
#: of
msgid "A list of hyper parameter dictionaries."
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.resume:1 of
msgid "When in resume mode, load the previous optimization data in advance."
msgstr ""

#: ../../source/api_reference/aiaccel.optimizer.rst:16
msgid "aiaccel.optimizer.create module"
msgstr ""

#: aiaccel.optimizer.create.create_optimizer:1 of
msgid "Returns master type."
msgstr ""

#: aiaccel.optimizer.create.create_optimizer:3 of
msgid "Path to the configuration file."
msgstr ""

#: aiaccel.optimizer.create.create_optimizer:6
#: aiaccel.optimizer.create.import_and_getattr:6 of
msgid "Subclass of aiaccel.optimizer.abstract_optimizer.AbstractOptimizer."
msgstr ""

#: aiaccel.optimizer.create.import_and_getattr:1 of
msgid "Imports the specified Optimizer class."
msgstr ""

#: aiaccel.optimizer.create.import_and_getattr:3 of
msgid "Optimizer class name, e.g. aiaccel.optimizer.NelderMeadOptimizer"
msgstr ""

#: ../../source/api_reference/aiaccel.optimizer.rst:24
msgid "aiaccel.optimizer.grid\\_optimizer module"
msgstr ""

#: aiaccel.optimizer.grid_optimizer.GridOptimizer:1
#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer:1
#: aiaccel.optimizer.random_optimizer.RandomOptimizer:1
#: aiaccel.optimizer.sobol_optimizer.SobolOptimizer:1
#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer:1 of
msgid ""
"ベースクラス: "
":py:class:`~aiaccel.optimizer.abstract_optimizer.AbstractOptimizer`"
msgstr ""

#: aiaccel.optimizer.grid_optimizer.GridOptimizer:1 of
msgid "An optimizer class with grid search algorithm."
msgstr ""

#: aiaccel.optimizer.grid_optimizer.GridOptimizer:9 of
msgid "A list of ready hyper parameters."
msgstr ""

#: aiaccel.optimizer._nelder_mead.NelderMead:78
#: aiaccel.optimizer.grid_optimizer.GridOptimizer:11 of
msgid "list[dict]"
msgstr ""

#: aiaccel.optimizer.grid_optimizer.GridOptimizer:15
#: aiaccel.optimizer.sobol_optimizer.SobolOptimizer:9 of
msgid "A number of generated hyper parameters."
msgstr ""

#: aiaccel.optimizer.grid_optimizer.GridOptimizer.generate_initial_parameter:1
#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.generate_initial_parameter:1
#: aiaccel.optimizer.sobol_optimizer.SobolOptimizer.generate_initial_parameter:1
#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer.generate_initial_parameter:1 of
msgid "Generate initial parameters."
msgstr ""

#: aiaccel.optimizer.grid_optimizer.GridOptimizer.generate_initial_parameter:3
#: aiaccel.optimizer.grid_optimizer.GridOptimizer.generate_parameter:3
#: aiaccel.optimizer.sobol_optimizer.SobolOptimizer.generate_initial_parameter:3
#: aiaccel.optimizer.sobol_optimizer.SobolOptimizer.generate_parameter:3 of
msgid "A list of new parameters."
msgstr ""

#: aiaccel.optimizer.grid_optimizer.GridOptimizer.generate_parameter:1
#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.generate_parameter:1
#: aiaccel.optimizer.random_optimizer.RandomOptimizer.generate_parameter:1
#: aiaccel.optimizer.sobol_optimizer.SobolOptimizer.generate_parameter:1
#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer.generate_parameter:1 of
msgid "Generate parameters."
msgstr ""

#: aiaccel.optimizer.grid_optimizer.GridOptimizer.get_parameter_index:1 of
msgid "Get a next parameter index."
msgstr ""

#: aiaccel.optimizer.grid_optimizer.GridOptimizer.get_parameter_index:3 of
msgid "It returns None if all parameters are already generated."
msgstr ""

#: aiaccel.optimizer.grid_optimizer.generate_grid_points:1 of
msgid "Make a list of all parameters for this grid."
msgstr ""

#: aiaccel.optimizer.grid_optimizer.generate_grid_points:3 of
msgid "A hyper parameter object."
msgstr ""

#: aiaccel.optimizer.grid_optimizer.generate_grid_points:5
#: aiaccel.optimizer.grid_optimizer.get_grid_options:5 of
msgid "A config object."
msgstr ""

#: aiaccel.optimizer.grid_optimizer.generate_grid_points:8 of
msgid "A dictionary including all grid parameters."
msgstr ""

#: aiaccel.optimizer.grid_optimizer.generate_grid_points:12
#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.generate_parameter:7
#: of
msgid "Causes when an invalid parameter type is set."
msgstr ""

#: aiaccel.optimizer.grid_optimizer.get_grid_options:1 of
msgid "Get options about grid search."
msgstr ""

#: aiaccel.optimizer.grid_optimizer.get_grid_options:3 of
msgid "A parameter name to get its options."
msgstr ""

#: aiaccel.optimizer.grid_optimizer.get_grid_options:8 of
msgid ""
"The first one is a base of logarithm parameter. The second one is "
"logarithm parameter or not. The third one is a step of the grid."
msgstr ""

#: aiaccel.optimizer.grid_optimizer.get_grid_options:13 of
msgid "Causes when step is not specified."
msgstr ""

#: ../../source/api_reference/aiaccel.optimizer.rst:32
msgid "aiaccel.optimizer.nelder\\_mead\\_optimizer module"
msgstr ""

#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer:1 of
msgid "An optimizer class with nelder mead algorithm."
msgstr ""

#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer:3 of
msgid "A dictionary containing"
msgstr ""

#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer:9 of
msgid "A class object implementing Nelder-Mead method."
msgstr ""

#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer:12 of
msgid "NelderMead"
msgstr ""

#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer:16 of
msgid "A pool of parameters waiting for the process."
msgstr ""

#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer:18
#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer:24
#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.get_ready_parameters:3
#: of
msgid "list"
msgstr ""

#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer:22 of
msgid "A list of parameters being processed."
msgstr ""

#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.generate_initial_parameter:3
#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer.generate_initial_parameter:3 of
msgid "A list of new parameters. None if `self.nelder_mead` is already defined."
msgstr ""

#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.generate_parameter:3
#: aiaccel.optimizer.random_optimizer.RandomOptimizer.generate_parameter:3
#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer.generate_parameter:7 of
msgid "A list of created parameters."
msgstr ""

#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.get_nm_results:1
#: of
msgid "Get the list of Nelder-Mead result."
msgstr ""

#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.get_nm_results:3
#: of
msgid "Results per trial."
msgstr ""

#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.get_ready_parameters:1
#: of
msgid "Get the list of ready parameters."
msgstr ""

#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.nelder_mead_main:1
#: of
msgid "Nelder Mead's main module."
msgstr ""

#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.nelder_mead_main:5
#: of
msgid "Result of optimization."
msgstr ""

#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.special_settings_when_using_ordinal:1
#: of
msgid ""
"When using ordinal types in NelderMead, the array index is predicted. "
"https://github.com/aistairc/aiaccel/issues/175"
msgstr ""

#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.update_ready_parameter_name:1
#: of
msgid "Update hyperparameter's names."
msgstr ""

#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.update_ready_parameter_name:3
#: of
msgid "old parameter name"
msgstr ""

#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.update_ready_parameter_name:5
#: of
msgid "New parameter name"
msgstr ""

#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.update_ready_parameter_name:12
#: of
msgid "before::"
msgstr ""

#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.update_ready_parameter_name:26
#: of
msgid "after::"
msgstr ""

#: ../../source/api_reference/aiaccel.optimizer.rst:40
msgid "aiaccel.optimizer.random\\_optimizer module"
msgstr ""

#: aiaccel.optimizer.random_optimizer.RandomOptimizer:1 of
msgid "An optimizer class with a random algorithm."
msgstr ""

#: ../../source/api_reference/aiaccel.optimizer.rst:48
msgid "aiaccel.optimizer.sobol\\_optimizer module"
msgstr ""

#: aiaccel.optimizer.sobol_optimizer.SobolOptimizer:1 of
msgid "An optimizer class with sobol algorithm."
msgstr ""

#: aiaccel.optimizer.sobol_optimizer.SobolOptimizer:15 of
msgid "Engine for generating (scrambled) Sobol' sequences."
msgstr ""

#: aiaccel.optimizer.sobol_optimizer.SobolOptimizer:17 of
msgid "Sobol"
msgstr ""

#: aiaccel.optimizer._nelder_mead.NelderMead:162
#: aiaccel.optimizer.sobol_optimizer.SobolOptimizer:19 of
msgid "課題"
msgstr ""

#: aiaccel.optimizer.sobol_optimizer.SobolOptimizer:21 of
msgid ""
"Make it clear to resume this optimizer with Sobol sampler. Currentcode "
"resume the sampler counts with a number of FINISHED PARAMETER FILES. "
"Confirm whether the current code resumes for any timings of quits."
msgstr ""

#: ../../source/api_reference/aiaccel.optimizer.rst:56
msgid "aiaccel.optimizer.tpe\\_optimizer module"
msgstr ""

#: aiaccel.optimizer.tpe_optimizer.TPESamplerWrapper:1 of
msgid "ベースクラス: :py:class:`~optuna.samplers._tpe.sampler.TPESampler`"
msgstr ""

#: aiaccel.optimizer.tpe_optimizer.TPESamplerWrapper.get_startup_trials:1 of
msgid "Get a number of startup trials in TPESampler."
msgstr ""

#: aiaccel.optimizer.tpe_optimizer.TPESamplerWrapper.get_startup_trials:3 of
msgid "A number of startup trials."
msgstr ""

#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer:1 of
msgid "An optimizer class based on optuna.samplers.TPESampler."
msgstr ""

#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer:9 of
msgid "A dictionary of parameters."
msgstr ""

#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer:11 of
msgid "dict[int, list[dict[str, float | int | str]]]"
msgstr ""

#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer:15 of
msgid "A list of HyperParameter objects."
msgstr ""

#: aiaccel.optimizer._nelder_mead.NelderMead:47
#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer:18 of
msgid "list[HyperParameter]"
msgstr ""

#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer:22 of
msgid "Study name."
msgstr ""

#: aiaccel.optimizer._nelder_mead.NelderMead:153
#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer:24
#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer:30 of
msgid "str"
msgstr ""

#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer:28 of
msgid "optuna.study.Study object."
msgstr ""

#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer:34 of
msgid ""
"A dictionary of optuna.distributions objects defined for individual "
"parameters."
msgstr ""

#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer:37 of
msgid "dict[str, optuna.distributions]"
msgstr ""

#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer:41 of
msgid "A dictionary of optuna.trial.Trial objects."
msgstr ""

#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer:44 of
msgid "dict[int, optuna.trial.Trial]"
msgstr ""

#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer:48 of
msgid "Random seed."
msgstr ""

#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer.check_result:1 of
msgid "Check the result files and add it to sampler object."
msgstr ""

#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer.create_study:1 of
msgid "Create the optuna.study object and store it."
msgstr ""

#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer.generate_parameter:3 of
msgid "A number of generating parameters. Defaults to 1."
msgstr ""

#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer.is_startup_trials:1
#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer.is_startup_trials:3 of
msgid "Is a current trial startup trial or not."
msgstr ""

#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer.pre_process:1 of
msgid "Pre-Procedure before executing optimize processes."
msgstr ""

#: aiaccel.optimizer.tpe_optimizer.create_distributions:1 of
msgid "Create an optuna.distributions dictionary for the parameters."
msgstr ""

#: aiaccel.optimizer.tpe_optimizer.create_distributions:3 of
msgid "A parameter configuration object."
msgstr ""

#: aiaccel.optimizer.tpe_optimizer.create_distributions:7 of
msgid ""
"Occurs when parameter type is other than 'float', 'int',     "
"'categorical', or 'ordinal'."
msgstr ""

#: aiaccel.optimizer.tpe_optimizer.create_distributions:9 of
msgid "An optuna.distributions object."
msgstr ""

#: ../../source/api_reference/aiaccel.optimizer.rst:64
msgid "Module contents"
msgstr ""

#: aiaccel.optimizer._nelder_mead.NelderMead:1 of
msgid "ベースクラス: :py:class:`object`"
msgstr ""

#: aiaccel.optimizer._nelder_mead.NelderMead:1 of
msgid "A class implementing Nelder-Mead method."
msgstr ""

#: aiaccel.optimizer._nelder_mead.NelderMead:3 of
msgid "A list of hyper parameter objects."
msgstr ""

#: aiaccel.optimizer._nelder_mead.NelderMead:5 of
msgid "A max iteration counts. Defaults to float('inf')."
msgstr ""

#: aiaccel.optimizer._nelder_mead.NelderMead:8 of
msgid "A coefficient values. Defaults to None."
msgstr ""

#: aiaccel.optimizer._nelder_mead.NelderMead:10 of
msgid "Evaluate maximize or not. Defaults to False."
msgstr ""

#: aiaccel.optimizer._nelder_mead.NelderMead:13 of
msgid "A initial parameters. Defaults to None."
msgstr ""

#: aiaccel.optimizer._nelder_mead.NelderMead:15 of
msgid "A reference to a random generator. Defaults to None."
msgstr ""

#: aiaccel.optimizer._nelder_mead.NelderMead:21 of
msgid "A list of boundaries."
msgstr ""

#: aiaccel.optimizer._nelder_mead.NelderMead:23
#: aiaccel.optimizer._nelder_mead.NelderMead:35
#: aiaccel.optimizer._nelder_mead.NelderMead:60 of
msgid "np.ndarray"
msgstr ""

#: aiaccel.optimizer._nelder_mead.NelderMead:27 of
msgid "A dictionary of coefficients."
msgstr ""

#: aiaccel.optimizer._nelder_mead.NelderMead:29 of
msgid "dict[str, float]"
msgstr ""

#: aiaccel.optimizer._nelder_mead.NelderMead:33 of
msgid "A list of evaluated parameter results."
msgstr ""

#: aiaccel.optimizer._nelder_mead.NelderMead:39 of
msgid "A logger object."
msgstr ""

#: aiaccel.optimizer._nelder_mead.NelderMead:41 of
msgid "logging.Logger"
msgstr ""

#: aiaccel.optimizer._nelder_mead.NelderMead:45 of
msgid "A list of hyper parameters."
msgstr ""

#: aiaccel.optimizer._nelder_mead.NelderMead:51 of
msgid "A dictionary to store temporal calculation results."
msgstr ""

#: aiaccel.optimizer._nelder_mead.NelderMead:54 of
msgid "dict[str, float | None]"
msgstr ""

#: aiaccel.optimizer._nelder_mead.NelderMead:58 of
msgid "A list of current evaluated parameters."
msgstr ""

#: aiaccel.optimizer._nelder_mead.NelderMead:64 of
msgid "A current centroid value of y."
msgstr ""

#: aiaccel.optimizer._nelder_mead.NelderMead:66
#: aiaccel.optimizer._nelder_mead.NelderMead:90
#: aiaccel.optimizer._nelder_mead.NelderMead:96
#: aiaccel.optimizer._nelder_mead.NelderMead:102
#: aiaccel.optimizer._nelder_mead.NelderMead:108 of
msgid "float"
msgstr ""

#: aiaccel.optimizer._nelder_mead.NelderMead:70 of
msgid "A count of evaluation each loop."
msgstr ""

#: aiaccel.optimizer._nelder_mead.NelderMead:76 of
msgid "A list to store candidates to be executed."
msgstr ""

#: aiaccel.optimizer._nelder_mead.NelderMead:82 of
msgid "A number to be added to executing list."
msgstr ""

#: aiaccel.optimizer._nelder_mead.NelderMead:88 of
msgid "A temporal result of Expand."
msgstr ""

#: aiaccel.optimizer._nelder_mead.NelderMead:94 of
msgid "A temporal result of Inside Contraction."
msgstr ""

#: aiaccel.optimizer._nelder_mead.NelderMead:100 of
msgid "A temporal result of Outside Contraction."
msgstr ""

#: aiaccel.optimizer._nelder_mead.NelderMead:106 of
msgid "A temporal result of Reflection"
msgstr ""

#: aiaccel.optimizer._nelder_mead.NelderMead:112 of
msgid "A storage of execution history of each value and operator."
msgstr ""

#: aiaccel.optimizer._nelder_mead.NelderMead:115 of
msgid "dict[str, list[float | str]]"
msgstr ""

#: aiaccel.optimizer._nelder_mead.NelderMead:119 of
msgid "Evaluate the result as maximize or minimize."
msgstr ""

#: aiaccel.optimizer._nelder_mead.NelderMead:125 of
msgid "A number of max iterations. This is compared with _evaluated_itr."
msgstr ""

#: aiaccel.optimizer._nelder_mead.NelderMead:132 of
msgid "A number of Shrink."
msgstr ""

#: aiaccel.optimizer._nelder_mead.NelderMead:138 of
msgid "Is a current iteration out of boundaries or not."
msgstr ""

#: aiaccel.optimizer._nelder_mead.NelderMead:145 of
msgid "A list of results for _executing."
msgstr ""

#: aiaccel.optimizer._nelder_mead.NelderMead:147 of
msgid "list[float]"
msgstr ""

#: aiaccel.optimizer._nelder_mead.NelderMead:151 of
msgid "A current state."
msgstr ""

#: aiaccel.optimizer._nelder_mead.NelderMead:157 of
msgid ""
"A number of iterations. Currently same with _evaluated_itr. It's "
"different if counts out of boundaries."
msgstr ""

#: aiaccel.optimizer._nelder_mead.NelderMead:162 of
msgid "Fix float comparison errors."
msgstr ""

#: aiaccel.optimizer._nelder_mead.NelderMead.add_result_parameters:1 of
msgid "Add a new result."
msgstr ""

#: aiaccel.optimizer._nelder_mead.NelderMead.add_result_parameters:3 of
msgid "A dictionary of a result parameter."
msgstr ""

#: aiaccel.optimizer._nelder_mead.NelderMead.search:1 of
msgid ""
"Proceed a search step. One search method does not increment the "
"iteration. It increments when finalize method is called."
msgstr ""

#: aiaccel.optimizer._nelder_mead.NelderMead.search:4 of
msgid "The details of state transitions are as follows: ::"
msgstr ""

#~ msgid "A total number to generate hyper parameters."
#~ msgstr ""

#~ msgid "A number to pool hyper parameters."
#~ msgstr ""

#~ msgid "Generate a initial parameter."
#~ msgstr ""

#~ msgid ""
#~ "Union[Dict[str, List[Dict[str, Union[str, "
#~ "Union[float,     List[float]]]]], None]: A "
#~ "created initial parameter. It returns     "
#~ "None if any parameters are already "
#~ "created."
#~ msgstr ""

#~ msgid "Union[Dict[str, List[Dict[str, Union[str, Union[float,"
#~ msgstr ""

#~ msgid ""
#~ "List[float]]]]], None]: A created initial "
#~ "parameter. It returns None if any "
#~ "parameters are already created."
#~ msgstr ""

#~ msgid "A number of generating parameters."
#~ msgstr ""

#~ msgid "Causes when the inherited class does not     implement."
#~ msgstr ""

#~ msgid "A list of hyper parameter dictionaries."
#~ msgstr ""

#~ msgid "param = {"
#~ msgstr ""

#~ msgid "'parameter_name': ..., 'type': ..., 'value': ..."
#~ msgstr ""

#~ msgid "}"
#~ msgstr ""

#~ msgid "When in resume mode, load the previous"
#~ msgstr ""

#~ msgid "optimization data in advance."
#~ msgstr ""

#~ msgid "Imports the specified Optimizer class. -"
#~ msgstr ""

#~ msgid "Args:"
#~ msgstr ""

#~ msgid "name(str): Optimizer class name"
#~ msgstr ""

#~ msgid "(e.g.) aiaccel.optimizer.NelderMeadOptimizer"
#~ msgstr ""

#~ msgid "Returns:"
#~ msgstr ""

#~ msgid "Any: <Optimizer class>"
#~ msgstr ""

#~ msgid "List[dict]"
#~ msgstr ""

#~ msgid "It returns None if all parameters are     already generated."
#~ msgstr ""

#~ msgid "It returns None if all parameters are"
#~ msgstr ""

#~ msgid "already generated."
#~ msgstr ""

#~ msgid "A configuration object."
#~ msgstr ""

#~ msgid ""
#~ "The first one is a     base of "
#~ "logarithm parameter. The second one is"
#~ " logarithm parameter     or not. The "
#~ "third one is a step of the "
#~ "grid."
#~ msgstr ""

#~ msgid "The first one is a"
#~ msgstr ""

#~ msgid ""
#~ "base of logarithm parameter. The second"
#~ " one is logarithm parameter or not."
#~ " The third one is a step of "
#~ "the grid."
#~ msgstr ""

#~ msgid "befor"
#~ msgstr ""

#~ msgid "{"
#~ msgstr ""

#~ msgid "'vertex_id': 'CMTrNe5P8a', 'parameters': ["
#~ msgstr ""

#~ msgid ""
#~ "{'parameter_name': 'x1', 'value': 3.37640289751353},"
#~ " {'parameter_name': 'x2', 'value': "
#~ "1.6556037243290205}"
#~ msgstr ""

#~ msgid ""
#~ "], 'state': 'WaitExpand', 'itr': 5, "
#~ "'index': None, 'out_of_boundary': False"
#~ msgstr ""

#~ msgid "after"
#~ msgstr ""

#~ msgid "'vertex_id': '000014', <---- replace to trial_id 'parameters': ["
#~ msgstr ""

#~ msgid ""
#~ "ToDo: Make it clear to resume this"
#~ " optimizer with Sobol sampler. Current "
#~ "code resume the sampler counts with "
#~ "a"
#~ msgstr ""

#~ msgid ""
#~ "number of FINISHED PARAMETER FILES. "
#~ "Confirm whether the current code resumes"
#~ " for any timings of quits."
#~ msgstr ""

#~ msgid "dict[str, Union[str, int, bool]]"
#~ msgstr ""

#~ msgid "Check to confirm if an error has occurred."
#~ msgstr ""

#~ msgid "no error | False: with error."
#~ msgstr ""

#~ msgid "Causes when the inherited class does not"
#~ msgstr ""

#~ msgid "Optimizer class name (e.g.) aiaccel.optimizer.NelderMeadOptimizer"
#~ msgstr ""

#~ msgid "<Optimizer class>"
#~ msgstr ""

#~ msgid "A List of new parameters."
#~ msgstr ""

#~ msgid ""
#~ "A List of new parameters. None if"
#~ " `self.nelder_mead` is already defined."
#~ msgstr ""

#~ msgid "dict[int, list[dict[str, Union[float, int, str]]]]"
#~ msgstr ""

