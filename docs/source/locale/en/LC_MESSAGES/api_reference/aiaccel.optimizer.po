# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2024, AIST
# This file is distributed under the same license as the aiaccel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: aiaccel \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-06-06 08:49+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: en\n"
"Language-Team: en <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"

#: ../../source/api_reference/aiaccel.optimizer.rst:2
msgid "aiaccel.optimizer package"
msgstr ""

#: ../../source/api_reference/aiaccel.optimizer.rst:5
msgid "Submodules"
msgstr ""

#: ../../source/api_reference/aiaccel.optimizer.rst:8
msgid "aiaccel.optimizer.abstract\\_optimizer module"
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer:1 of
msgid "ベースクラス: :py:class:`~aiaccel.module.AbstractModule`"
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer:1 of
msgid "An abstract class for Optimizer classes."
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.convert_type_by_config
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.finalize_operation
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.generate_initial_parameter
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.generate_new_parameter
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.generate_parameter
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.get_any_trial_objective
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.get_trial_id
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.is_all_parameters_generated
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.is_error_free
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.post_process
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.pre_process
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.register_new_parameters
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.resume
#: aiaccel.optimizer.budget_specified_grid_optimizer.BudgetSpecifiedGridOptimizer
#: aiaccel.optimizer.budget_specified_grid_optimizer.BudgetSpecifiedGridOptimizer.generate_initial_parameter
#: aiaccel.optimizer.budget_specified_grid_optimizer.BudgetSpecifiedGridOptimizer.generate_parameter
#: aiaccel.optimizer.create.create_optimizer
#: aiaccel.optimizer.create.import_and_getattr
#: aiaccel.optimizer.grid_optimizer.GridOptimizer
#: aiaccel.optimizer.grid_optimizer.GridOptimizer.generate_initial_parameter
#: aiaccel.optimizer.grid_optimizer.GridOptimizer.generate_parameter
#: aiaccel.optimizer.grid_optimizer.GridOptimizer.get_parameter_index
#: aiaccel.optimizer.grid_optimizer.generate_grid_points
#: aiaccel.optimizer.grid_optimizer.get_grid_options
#: aiaccel.optimizer.motpe_optimizer.MOTpeOptimizer
#: aiaccel.optimizer.motpe_optimizer.MOTpeOptimizer.create_study
#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer
#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.convert_ndarray_to_parameter
#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.generate_initial_parameter
#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.generate_parameter
#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.nelder_mead_main
#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.new_finished
#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.out_of_boundary
#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.run_optimizer
#: aiaccel.optimizer.random_optimizer.RandomOptimizer
#: aiaccel.optimizer.random_optimizer.RandomOptimizer.generate_parameter
#: aiaccel.optimizer.sobol_optimizer.SobolOptimizer
#: aiaccel.optimizer.sobol_optimizer.SobolOptimizer.generate_initial_parameter
#: aiaccel.optimizer.sobol_optimizer.SobolOptimizer.generate_parameter
#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer
#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer.check_result
#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer.create_study
#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer.generate_initial_parameter
#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer.generate_parameter
#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer.is_startup_trials
#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer.resume
#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer.resume_trial
#: aiaccel.optimizer.tpe_optimizer.create_distributions of
msgid "パラメータ"
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer:3
#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer:3 of
msgid ""
"A DictConfig object which contains optimization settings specified by the"
" configuration file and the command line options."
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer:10 of
msgid "A number of trials."
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer
#: aiaccel.optimizer.grid_optimizer.GridOptimizer
#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer
#: aiaccel.optimizer.sobol_optimizer.SobolOptimizer
#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer of
msgid "type"
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer:12
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer:18
#: aiaccel.optimizer.grid_optimizer.GridOptimizer:17
#: aiaccel.optimizer.sobol_optimizer.SobolOptimizer:11
#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer:50 of
msgid "int"
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer:16 of
msgid "A number of generated parameters."
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer:22 of
msgid "A HyperParameterConfiguration object."
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer:25 of
msgid "HyperParameterConfiguration"
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer:29 of
msgid "A TrialId object."
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer:31 of
msgid "TrialId"
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer:35
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.is_all_parameters_generated:5
#: of
msgid "True if all parameters are generated."
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer:37 of
msgid "bool"
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.convert_type_by_config:1
#: of
msgid "Convert the type of parameters by the configuration file."
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.convert_type_by_config:3
#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.convert_ndarray_to_parameter:6
#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.out_of_boundary:3
#: of
msgid "A list of parameters."
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.convert_type_by_config
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.finalize_operation
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.generate_initial_parameter
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.generate_new_parameter
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.generate_parameter
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.get_any_trial_objective
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.get_trial_id
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.is_all_parameters_generated
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.is_error_free
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.post_process
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.pre_process
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.register_new_parameters
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.resume
#: aiaccel.optimizer.budget_specified_grid_optimizer.BudgetSpecifiedGridOptimizer.generate_initial_parameter
#: aiaccel.optimizer.budget_specified_grid_optimizer.BudgetSpecifiedGridOptimizer.generate_parameter
#: aiaccel.optimizer.create.create_optimizer
#: aiaccel.optimizer.create.import_and_getattr
#: aiaccel.optimizer.grid_optimizer.GridOptimizer.generate_initial_parameter
#: aiaccel.optimizer.grid_optimizer.GridOptimizer.generate_parameter
#: aiaccel.optimizer.grid_optimizer.GridOptimizer.get_parameter_index
#: aiaccel.optimizer.grid_optimizer.generate_grid_points
#: aiaccel.optimizer.grid_optimizer.get_grid_options
#: aiaccel.optimizer.motpe_optimizer.MOTpeOptimizer.create_study
#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.convert_ndarray_to_parameter
#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.generate_initial_parameter
#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.generate_parameter
#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.nelder_mead_main
#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.new_finished
#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.out_of_boundary
#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.run_optimizer
#: aiaccel.optimizer.random_optimizer.RandomOptimizer.generate_parameter
#: aiaccel.optimizer.sobol_optimizer.SobolOptimizer.generate_initial_parameter
#: aiaccel.optimizer.sobol_optimizer.SobolOptimizer.generate_parameter
#: aiaccel.optimizer.tpe_optimizer.TPESamplerWrapper.get_startup_trials
#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer.check_result
#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer.create_study
#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer.generate_initial_parameter
#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer.generate_parameter
#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer.is_startup_trials
#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer.resume
#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer.resume_trial
#: aiaccel.optimizer.tpe_optimizer.create_distributions of
msgid "戻り値"
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.convert_type_by_config:7
#: of
msgid "A list of converted parameters."
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.convert_type_by_config
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.generate_initial_parameter
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.generate_new_parameter
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.generate_parameter
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.get_any_trial_objective
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.get_trial_id
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.is_all_parameters_generated
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.is_error_free
#: aiaccel.optimizer.budget_specified_grid_optimizer.BudgetSpecifiedGridOptimizer.generate_initial_parameter
#: aiaccel.optimizer.budget_specified_grid_optimizer.BudgetSpecifiedGridOptimizer.generate_parameter
#: aiaccel.optimizer.create.create_optimizer
#: aiaccel.optimizer.create.import_and_getattr
#: aiaccel.optimizer.grid_optimizer.GridOptimizer.generate_initial_parameter
#: aiaccel.optimizer.grid_optimizer.GridOptimizer.generate_parameter
#: aiaccel.optimizer.grid_optimizer.GridOptimizer.get_parameter_index
#: aiaccel.optimizer.grid_optimizer.generate_grid_points
#: aiaccel.optimizer.grid_optimizer.get_grid_options
#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.convert_ndarray_to_parameter
#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.generate_initial_parameter
#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.generate_parameter
#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.nelder_mead_main
#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.new_finished
#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.out_of_boundary
#: aiaccel.optimizer.random_optimizer.RandomOptimizer.generate_parameter
#: aiaccel.optimizer.sobol_optimizer.SobolOptimizer.generate_initial_parameter
#: aiaccel.optimizer.sobol_optimizer.SobolOptimizer.generate_parameter
#: aiaccel.optimizer.tpe_optimizer.TPESamplerWrapper.get_startup_trials
#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer.generate_initial_parameter
#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer.generate_parameter
#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer.is_startup_trials
#: aiaccel.optimizer.tpe_optimizer.create_distributions of
msgid "戻り値の型"
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.finalize_operation:1
#: of
msgid "Finalize the operation."
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.finalize_operation:5
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.post_process:5
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.pre_process:5
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.register_new_parameters:7
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.resume:5
#: aiaccel.optimizer.motpe_optimizer.MOTpeOptimizer.create_study:5
#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.run_optimizer:5
#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer.check_result:5
#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer.create_study:5
#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer.resume:5
#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer.resume_trial:5 of
msgid "None"
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.generate_initial_parameter:1
#: of
msgid "Generate a list of initial parameters."
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.generate_initial_parameter:5
#: of
msgid "A created list of initial parameters."
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.generate_new_parameter:1
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.generate_parameter:1
#: of
msgid "Generate a list of parameters."
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.generate_new_parameter:5
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.generate_parameter:7
#: of
msgid "A created list of parameters."
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.generate_parameter
#: aiaccel.optimizer.budget_specified_grid_optimizer.BudgetSpecifiedGridOptimizer
#: aiaccel.optimizer.budget_specified_grid_optimizer.BudgetSpecifiedGridOptimizer.generate_initial_parameter
#: aiaccel.optimizer.grid_optimizer.GridOptimizer.generate_initial_parameter
#: aiaccel.optimizer.grid_optimizer.generate_grid_points
#: aiaccel.optimizer.grid_optimizer.get_grid_options
#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.generate_parameter
#: aiaccel.optimizer.tpe_optimizer.create_distributions of
msgid "例外"
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.generate_parameter:5
#: of
msgid "Causes when the inherited class does not     implement."
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.get_any_trial_objective:1
#: of
msgid "Get any trial result."
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.get_any_trial_objective:3
#: of
msgid "if the objective is multi-objective, return the list of objective."
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.get_any_trial_objective:5
#: of
msgid "Trial ID."
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.get_any_trial_objective:8
#: of
msgid "Any trial result."
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.get_trial_id:1 of
msgid "Get the current trial ID."
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.get_trial_id:5 of
msgid "The current trial ID."
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.is_all_parameters_generated:1
#: of
msgid "Check if all parameters are generated."
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.is_error_free:1 of
msgid "Check if all trials are error free."
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.is_error_free:5 of
msgid "True if all trials are error free."
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.post_process:1 of
msgid "Post-procedure after executed processes."
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.pre_process:1 of
msgid "Pre-procedure before executing processes."
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.register_new_parameters:1
#: of
msgid "Create hyper parameter files."
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.register_new_parameters:3
#: of
msgid "A list of hyper parameter dictionaries."
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.resume:1 of
msgid "When in resume mode, load the previous optimization data in advance."
msgstr ""

#: ../../source/api_reference/aiaccel.optimizer.rst:16
msgid "aiaccel.optimizer.budget\\_specified\\_grid\\_optimizer module"
msgstr ""

#: aiaccel.optimizer.budget_specified_grid_optimizer.BudgetSpecifiedGridOptimizer:1
#: aiaccel.optimizer.grid_optimizer.GridOptimizer:1
#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer:1
#: aiaccel.optimizer.random_optimizer.RandomOptimizer:1
#: aiaccel.optimizer.sobol_optimizer.SobolOptimizer:1
#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer:1 of
msgid ""
"ベースクラス: "
":py:class:`~aiaccel.optimizer.abstract_optimizer.AbstractOptimizer`"
msgstr ""

#: aiaccel.optimizer.budget_specified_grid_optimizer.BudgetSpecifiedGridOptimizer:1
#: aiaccel.optimizer.grid_optimizer.GridOptimizer:1 of
msgid "An optimizer class with grid search algorithm."
msgstr ""

#: aiaccel.optimizer.budget_specified_grid_optimizer.BudgetSpecifiedGridOptimizer:3
#: aiaccel.optimizer.grid_optimizer.GridOptimizer:3
#: aiaccel.optimizer.motpe_optimizer.MOTpeOptimizer:3
#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer:3 of
msgid "A dictionary containing command line options."
msgstr ""

#: aiaccel.optimizer.budget_specified_grid_optimizer.BudgetSpecifiedGridOptimizer:6
#: of
msgid ""
"Causes when the number of trials is smaller than the least     space size"
" determined by the parameters of which the number of     choices is "
"specified."
msgstr ""

#: aiaccel.optimizer.budget_specified_grid_optimizer.BudgetSpecifiedGridOptimizer.generate_initial_parameter:1
#: aiaccel.optimizer.grid_optimizer.GridOptimizer.generate_initial_parameter:1
#: of
msgid "Generates initial parameters."
msgstr ""

#: aiaccel.optimizer.budget_specified_grid_optimizer.BudgetSpecifiedGridOptimizer.generate_initial_parameter:5
#: of
msgid "Causes when initial parameter could not be generated."
msgstr ""

#: aiaccel.optimizer.budget_specified_grid_optimizer.BudgetSpecifiedGridOptimizer.generate_initial_parameter:7
#: aiaccel.optimizer.budget_specified_grid_optimizer.BudgetSpecifiedGridOptimizer.generate_parameter:5
#: aiaccel.optimizer.grid_optimizer.GridOptimizer.generate_initial_parameter:10
#: aiaccel.optimizer.sobol_optimizer.SobolOptimizer.generate_initial_parameter:5
#: aiaccel.optimizer.sobol_optimizer.SobolOptimizer.generate_parameter:5 of
msgid "A list of new parameters."
msgstr ""

#: aiaccel.optimizer.budget_specified_grid_optimizer.BudgetSpecifiedGridOptimizer.generate_parameter:1
#: of
msgid "Generates parameters."
msgstr ""

#: ../../source/api_reference/aiaccel.optimizer.rst:24
msgid "aiaccel.optimizer.create module"
msgstr ""

#: aiaccel.optimizer.create.create_optimizer:1 of
msgid "Creates an optimizer class."
msgstr ""

#: aiaccel.optimizer.create.create_optimizer:3
#: aiaccel.optimizer.create.import_and_getattr:3 of
msgid "Optimizer class name, e.g. aiaccel.optimizer.NelderMeadOptimizer"
msgstr ""

#: aiaccel.optimizer.create.create_optimizer:6
#: aiaccel.optimizer.create.import_and_getattr:6 of
msgid "Subclass of aiaccel.optimizer.abstract_optimizer.AbstractOptimizer."
msgstr ""

#: aiaccel.optimizer.create.import_and_getattr:1 of
msgid "Imports the specified Optimizer class."
msgstr ""

#: ../../source/api_reference/aiaccel.optimizer.rst:32
msgid "aiaccel.optimizer.grid\\_optimizer module"
msgstr ""

#: aiaccel.optimizer.grid_optimizer.GridOptimizer:9 of
msgid "A list of ready hyperparameters."
msgstr ""

#: aiaccel.optimizer.grid_optimizer.GridOptimizer:11 of
msgid "list[dict]"
msgstr ""

#: aiaccel.optimizer.grid_optimizer.GridOptimizer:15 of
msgid "The number of generated hyperparameters."
msgstr ""

#: aiaccel.optimizer.grid_optimizer.GridOptimizer.generate_initial_parameter:3
#: of
msgid ""
"Grid search algorithm always ignores the initial values in configulation "
"file even if given."
msgstr ""

#: aiaccel.optimizer.grid_optimizer.GridOptimizer.generate_initial_parameter:8
#: of
msgid "Causes when the parameter is not generated."
msgstr ""

#: aiaccel.optimizer.grid_optimizer.GridOptimizer.generate_parameter:1
#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.generate_parameter:1
#: aiaccel.optimizer.random_optimizer.RandomOptimizer.generate_parameter:1
#: aiaccel.optimizer.sobol_optimizer.SobolOptimizer.generate_parameter:1
#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer.generate_parameter:1 of
msgid "Generate parameters."
msgstr ""

#: aiaccel.optimizer.grid_optimizer.GridOptimizer.generate_parameter:5 of
msgid "A list of new     parameters. None if all of parameters are generated."
msgstr ""

#: aiaccel.optimizer.grid_optimizer.GridOptimizer.generate_parameter:7 of
msgid "A list of new"
msgstr ""

#: aiaccel.optimizer.grid_optimizer.GridOptimizer.generate_parameter:8 of
msgid "parameters. None if all of parameters are generated."
msgstr ""

#: aiaccel.optimizer.grid_optimizer.GridOptimizer.get_parameter_index:1 of
msgid "Get a next parameter index."
msgstr ""

#: aiaccel.optimizer.grid_optimizer.GridOptimizer.get_parameter_index:5 of
msgid "It returns None if all parameters are already generated."
msgstr ""

#: aiaccel.optimizer.grid_optimizer.generate_grid_points:1 of
msgid "Make a list of all parameters for this grid."
msgstr ""

#: aiaccel.optimizer.grid_optimizer.generate_grid_points:3 of
msgid "A hyper parameter object."
msgstr ""

#: aiaccel.optimizer.grid_optimizer.generate_grid_points:5 of
msgid "A configuration object."
msgstr ""

#: aiaccel.optimizer.grid_optimizer.generate_grid_points:8 of
msgid "A dictionary including all grid parameters."
msgstr ""

#: aiaccel.optimizer.grid_optimizer.generate_grid_points:12
#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.generate_parameter:9
#: of
msgid "Causes when an invalid parameter type is set."
msgstr ""

#: aiaccel.optimizer.grid_optimizer.get_grid_options:1 of
msgid "Get options about grid search."
msgstr ""

#: aiaccel.optimizer.grid_optimizer.get_grid_options:3 of
msgid "A parameter name to get its options."
msgstr ""

#: aiaccel.optimizer.grid_optimizer.get_grid_options:5 of
msgid "A config object."
msgstr ""

#: aiaccel.optimizer.grid_optimizer.get_grid_options:8 of
msgid ""
"The first one is a base of logarithm parameter. The second one is "
"logarithm parameter or not. The third one is a step of the grid."
msgstr ""

#: aiaccel.optimizer.grid_optimizer.get_grid_options:13 of
msgid "Causes when step is not specified."
msgstr ""

#: ../../source/api_reference/aiaccel.optimizer.rst:40
msgid "aiaccel.optimizer.motpe\\_optimizer module"
msgstr ""

#: aiaccel.optimizer.motpe_optimizer.MOTpeOptimizer:1 of
msgid "ベースクラス: :py:class:`~aiaccel.optimizer.tpe_optimizer.TpeOptimizer`"
msgstr ""

#: aiaccel.optimizer.motpe_optimizer.MOTpeOptimizer:1 of
msgid "An optimizer class based on multi-objective optuna.samplers.TPESampler."
msgstr ""

#: aiaccel.optimizer.motpe_optimizer.MOTpeOptimizer.create_study:1 of
msgid "Create the optuna.study object."
msgstr ""

#: ../../source/api_reference/aiaccel.optimizer.rst:48
msgid "aiaccel.optimizer.nelder\\_mead\\_optimizer module"
msgstr ""

#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer:1 of
msgid "An optimizer class with nelder mead algorithm."
msgstr ""

#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer:10 of
msgid "A class object implementing Nelder-Mead method."
msgstr ""

#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer:13 of
msgid "NelderMead"
msgstr ""

#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.convert_ndarray_to_parameter:1
#: of
msgid "Convert a list of numpy.ndarray to a list of parameters."
msgstr ""

#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.convert_ndarray_to_parameter:3
#: of
msgid "A list of numpy.ndarray."
msgstr ""

#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.generate_initial_parameter:1
#: aiaccel.optimizer.sobol_optimizer.SobolOptimizer.generate_initial_parameter:1
#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer.generate_initial_parameter:1 of
msgid "Generate initial parameters."
msgstr ""

#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.generate_initial_parameter:5
#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer.generate_initial_parameter:5 of
msgid "A list of new parameters. None if `self.nelder_mead` is already defined."
msgstr ""

#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.generate_parameter:5
#: aiaccel.optimizer.random_optimizer.RandomOptimizer.generate_parameter:5
#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer.generate_parameter:7 of
msgid "A list of created parameters."
msgstr ""

#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.nelder_mead_main:1
#: of
msgid "Nelder Mead's main module."
msgstr ""

#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.nelder_mead_main:5
#: of
msgid "Result of optimization."
msgstr ""

#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.new_finished:1
#: of
msgid "Get new finished trial ids."
msgstr ""

#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.new_finished:5
#: of
msgid "A list of new finished trial ids."
msgstr ""

#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.out_of_boundary:1
#: of
msgid "Check if the parameters are out of boundary."
msgstr ""

#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.out_of_boundary:6
#: of
msgid "True if the parameters are out of boundary."
msgstr ""

#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.run_optimizer:1
#: of
msgid "Run optimization."
msgstr ""

#: ../../source/api_reference/aiaccel.optimizer.rst:56
msgid "aiaccel.optimizer.random\\_optimizer module"
msgstr ""

#: aiaccel.optimizer.random_optimizer.RandomOptimizer:1 of
msgid "An optimizer class with a random algorithm."
msgstr ""

#: aiaccel.optimizer.random_optimizer.RandomOptimizer:3
#: aiaccel.optimizer.sobol_optimizer.SobolOptimizer:3 of
msgid ""
"A DictConfig object which has contents of configuration file and command "
"line options."
msgstr ""

#: ../../source/api_reference/aiaccel.optimizer.rst:64
msgid "aiaccel.optimizer.sobol\\_optimizer module"
msgstr ""

#: aiaccel.optimizer.sobol_optimizer.SobolOptimizer:1 of
msgid "An optimizer class with sobol algorithm."
msgstr ""

#: aiaccel.optimizer.sobol_optimizer.SobolOptimizer:9 of
msgid "The number of generated hyper parameters."
msgstr ""

#: aiaccel.optimizer.sobol_optimizer.SobolOptimizer:15 of
msgid "Engine for generating (scrambled) Sobol' sequences."
msgstr ""

#: aiaccel.optimizer.sobol_optimizer.SobolOptimizer:17 of
msgid "Sobol"
msgstr ""

#: aiaccel.optimizer.sobol_optimizer.SobolOptimizer:19 of
msgid "課題"
msgstr ""

#: aiaccel.optimizer.sobol_optimizer.SobolOptimizer:21 of
msgid ""
"Make it clear to resume this optimizer with Sobol sampler. Currentcode "
"resume the sampler counts with a number of FINISHED PARAMETER FILES. "
"Confirm whether the current code resumes for any timings of quits."
msgstr ""

#: ../../source/api_reference/aiaccel.optimizer.rst:72
msgid "aiaccel.optimizer.tpe\\_optimizer module"
msgstr ""

#: aiaccel.optimizer.tpe_optimizer.LazyRandomStateWrapper:1 of
msgid "ベースクラス: :py:class:`~optuna.samplers._lazy_random_state.LazyRandomState`"
msgstr ""

#: aiaccel.optimizer.tpe_optimizer.RandomSamplerWrapper:1 of
msgid "ベースクラス: :py:class:`~optuna.samplers._random.RandomSampler`"
msgstr ""

#: aiaccel.optimizer.tpe_optimizer.TPESamplerWrapper:1 of
msgid "ベースクラス: :py:class:`~optuna.samplers._tpe.sampler.TPESampler`"
msgstr ""

#: aiaccel.optimizer.tpe_optimizer.TPESamplerWrapper.get_startup_trials:1 of
msgid "Get a number of startup trials in TPESampler."
msgstr ""

#: aiaccel.optimizer.tpe_optimizer.TPESamplerWrapper.get_startup_trials:3 of
msgid "A number of startup trials."
msgstr ""

#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer:1 of
msgid "An optimizer class based on optuna.samplers.TPESampler."
msgstr ""

#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer:9 of
msgid "A dictionary of parameters."
msgstr ""

#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer:11 of
msgid "dict[int, list[dict[str, float | int | str]]]"
msgstr ""

#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer:15 of
msgid "A list of HyperParameter objects."
msgstr ""

#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer:18 of
msgid "list[HyperParameter]"
msgstr ""

#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer:22 of
msgid "Study name."
msgstr ""

#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer:24
#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer:30 of
msgid "str"
msgstr ""

#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer:28 of
msgid "optuna.study.Study object."
msgstr ""

#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer:34 of
msgid ""
"A dictionary of optuna.distributions objects defined for individual "
"parameters."
msgstr ""

#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer:37 of
msgid "dict[str, optuna.distributions]"
msgstr ""

#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer:41 of
msgid "A dictionary of optuna.trial.Trial objects."
msgstr ""

#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer:44 of
msgid "dict[int, optuna.trial.Trial]"
msgstr ""

#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer:48 of
msgid "Random seed."
msgstr ""

#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer.check_result:1 of
msgid "Check the result files and add it to sampler object."
msgstr ""

#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer.create_study:1 of
msgid "Create the optuna.study object and store it."
msgstr ""

#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer.generate_parameter:3 of
msgid "A number of generating parameters. Defaults to 1."
msgstr ""

#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer.is_startup_trials:1
#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer.is_startup_trials:5 of
msgid "Is a current trial startup trial or not."
msgstr ""

#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer.resume:1 of
msgid "Resume the optimizer."
msgstr ""

#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer.resume_trial:1 of
msgid "Resume the trial."
msgstr ""

#: aiaccel.optimizer.tpe_optimizer.create_distributions:1 of
msgid "Create an optuna.distributions dictionary for the parameters."
msgstr ""

#: aiaccel.optimizer.tpe_optimizer.create_distributions:3 of
msgid "A parameter configuration object."
msgstr ""

#: aiaccel.optimizer.tpe_optimizer.create_distributions:7 of
msgid ""
"Occurs when parameter type is other than 'uniform_float',uniform_int',"
"     'categorical', or 'ordinal'."
msgstr ""

#: aiaccel.optimizer.tpe_optimizer.create_distributions:9 of
msgid "An optuna.distributions object."
msgstr ""

#: ../../source/api_reference/aiaccel.optimizer.rst:80
msgid "aiaccel.optimizer.value module"
msgstr ""

#: aiaccel.optimizer._nelder_mead.NelderMead:1 aiaccel.optimizer.value.Value:1
#: of
msgid "ベースクラス: :py:class:`object`"
msgstr ""

#: ../../source/api_reference/aiaccel.optimizer.rst:88
msgid "Module contents"
msgstr ""

