# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, AIST
# This file is distributed under the same license as the aiaccel package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: aiaccel \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-12-07 23:40+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"

#: ../../source/api_reference/aiaccel.optimizer.rst:2
msgid "aiaccel.optimizer package"
msgstr ""

#: ../../source/api_reference/aiaccel.optimizer.rst:5
msgid "Submodules"
msgstr ""

#: ../../source/api_reference/aiaccel.optimizer.rst:8
msgid "aiaccel.optimizer.abstract\\_optimizer module"
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer:1 of
msgid "ベースクラス: :py:class:`~aiaccel.module.AbstractModule`"
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer:1 of
msgid "An abstract class for Optimizer classes."
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer:5 of
msgid "A total number to generate hyper parameters."
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer
#: aiaccel.optimizer.grid_optimizer.GridOptimizer
#: aiaccel.optimizer.sobol_optimizer.SobolOptimizer of
msgid "type"
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer:7
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer:13
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer:26
#: aiaccel.optimizer.grid_optimizer.GridOptimizer:13
#: aiaccel.optimizer.sobol_optimizer.SobolOptimizer:7 of
msgid "int"
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer:11 of
msgid "A number to pool hyper parameters."
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer:17 of
msgid "Loaded hyper parameter configuration object."
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer:20 of
msgid "HyperParameterConfiguration"
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer:24 of
msgid "A number of generated hyper paramters."
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.check_error:1 of
msgid "Check to confirm if an error has occurred."
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.check_error
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.generate_parameter
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.register_new_parameters
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.resume
#: aiaccel.optimizer.grid_optimizer.GridOptimizer.generate_parameter
#: aiaccel.optimizer.grid_optimizer.generate_grid_points
#: aiaccel.optimizer.grid_optimizer.get_grid_options
#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.generate_parameter
#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.nelder_mead_main
#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.update_ready_parameter_name
#: aiaccel.optimizer.random_optimizer.RandomOptimizer.generate_parameter
#: aiaccel.optimizer.sobol_optimizer.SobolOptimizer.generate_parameter
#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer.generate_parameter
#: aiaccel.optimizer.tpe_optimizer.create_distributions of
msgid "パラメータ"
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.check_error
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.generate_initial_parameter
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.generate_parameter
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.inner_loop_main_process
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.post_process
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.pre_process
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.register_new_parameters
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.resume
#: aiaccel.optimizer.grid_optimizer.GridOptimizer.generate_initial_parameter
#: aiaccel.optimizer.grid_optimizer.GridOptimizer.generate_parameter
#: aiaccel.optimizer.grid_optimizer.GridOptimizer.get_parameter_index
#: aiaccel.optimizer.grid_optimizer.GridOptimizer.pre_process
#: aiaccel.optimizer.grid_optimizer.generate_grid_points
#: aiaccel.optimizer.grid_optimizer.get_grid_options
#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.generate_initial_parameter
#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.generate_parameter
#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.get_nm_results
#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.get_ready_parameters
#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.nelder_mead_main
#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.update_ready_parameter_name
#: aiaccel.optimizer.random_optimizer.RandomOptimizer.generate_parameter
#: aiaccel.optimizer.sobol_optimizer.SobolOptimizer.generate_initial_parameter
#: aiaccel.optimizer.sobol_optimizer.SobolOptimizer.generate_parameter
#: aiaccel.optimizer.sobol_optimizer.SobolOptimizer.pre_process
#: aiaccel.optimizer.tpe_optimizer.TPESamplerWrapper.get_startup_trials
#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer.check_result
#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer.create_study
#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer.generate_initial_parameter
#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer.is_startup_trials
#: aiaccel.optimizer.tpe_optimizer.create_distributions of
msgid "戻り値"
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.check_error:5 of
msgid "no error | False: with error."
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.check_error
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.inner_loop_main_process
#: aiaccel.optimizer.grid_optimizer.GridOptimizer.generate_initial_parameter
#: aiaccel.optimizer.grid_optimizer.GridOptimizer.generate_parameter
#: aiaccel.optimizer.grid_optimizer.GridOptimizer.get_parameter_index
#: aiaccel.optimizer.grid_optimizer.generate_grid_points
#: aiaccel.optimizer.grid_optimizer.get_grid_options
#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.get_nm_results
#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.nelder_mead_main
#: aiaccel.optimizer.tpe_optimizer.TPESamplerWrapper.get_startup_trials
#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer.is_startup_trials
#: aiaccel.optimizer.tpe_optimizer.create_distributions of
msgid "戻り値の型"
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.generate_initial_parameter:1
#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.generate_initial_parameter:1
#: aiaccel.optimizer.sobol_optimizer.SobolOptimizer.generate_initial_parameter:1
#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer.generate_initial_parameter:1 of
msgid "Generate a initial parameter."
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.generate_initial_parameter:3
#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.generate_initial_parameter:3
#: aiaccel.optimizer.sobol_optimizer.SobolOptimizer.generate_initial_parameter:3
#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer.generate_initial_parameter:3 of
msgid ""
"Union[Dict[str, List[Dict[str, Union[str, Union[float,     "
"List[float]]]]], None]: A created initial parameter. It returns     None "
"if any parameters are already created."
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.generate_initial_parameter:6
#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.generate_initial_parameter:6
#: aiaccel.optimizer.sobol_optimizer.SobolOptimizer.generate_initial_parameter:6
#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer.generate_initial_parameter:6 of
msgid "Union[Dict[str, List[Dict[str, Union[str, Union[float,"
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.generate_initial_parameter:6
#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.generate_initial_parameter:6
#: aiaccel.optimizer.sobol_optimizer.SobolOptimizer.generate_initial_parameter:6
#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer.generate_initial_parameter:6 of
msgid ""
"List[float]]]]], None]: A created initial parameter. It returns None if "
"any parameters are already created."
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.generate_parameter:1
#: aiaccel.optimizer.grid_optimizer.GridOptimizer.generate_parameter:1
#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.generate_parameter:1
#: aiaccel.optimizer.random_optimizer.RandomOptimizer.generate_parameter:1
#: aiaccel.optimizer.sobol_optimizer.SobolOptimizer.generate_parameter:1
#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer.generate_parameter:1 of
msgid "Generate parameters."
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.generate_parameter:3
#: aiaccel.optimizer.grid_optimizer.GridOptimizer.generate_parameter:3
#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.generate_parameter:3
#: aiaccel.optimizer.random_optimizer.RandomOptimizer.generate_parameter:3
#: aiaccel.optimizer.sobol_optimizer.SobolOptimizer.generate_parameter:3
#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer.generate_parameter:3 of
msgid "A number of generating parameters."
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.generate_parameter:6
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.post_process:3
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.pre_process:3
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.register_new_parameters:6
#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.resume:6
#: aiaccel.optimizer.grid_optimizer.GridOptimizer.pre_process:3
#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.generate_parameter:6
#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.update_ready_parameter_name:8
#: aiaccel.optimizer.random_optimizer.RandomOptimizer.generate_parameter:6
#: aiaccel.optimizer.sobol_optimizer.SobolOptimizer.generate_parameter:6
#: aiaccel.optimizer.sobol_optimizer.SobolOptimizer.pre_process:3
#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer.check_result:3
#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer.create_study:3 of
msgid "None"
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.generate_parameter
#: aiaccel.optimizer.grid_optimizer.generate_grid_points
#: aiaccel.optimizer.grid_optimizer.get_grid_options
#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.generate_parameter
#: of
msgid "例外"
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.generate_parameter:8
#: of
msgid "Causes when the inherited class does not     implement."
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.inner_loop_main_process:1
#: of
msgid "A main loop process. This process is repeated every main loop."
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.inner_loop_main_process:3
#: of
msgid "The process succeeds or not. The main loop exits if failed."
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.post_process:1
#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer.post_process:1 of
msgid "Post-procedure after executed processes."
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.pre_process:1
#: aiaccel.optimizer.grid_optimizer.GridOptimizer.pre_process:1
#: aiaccel.optimizer.sobol_optimizer.SobolOptimizer.pre_process:1 of
msgid "Pre-procedure before executing processes."
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.register_new_parameters:1
#: of
msgid "Create hyper parameter files."
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.register_new_parameters:3
#: of
msgid "A list of hyper parameter dictionaries."
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.register_new_parameters:12
#: of
msgid "param = {"
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.register_new_parameters:11
#: of
msgid "'parameter_name': ..., 'type': ..., 'value': ..."
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.register_new_parameters:14
#: of
msgid "}"
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.resume:2 of
msgid "When in resume mode, load the previous"
msgstr ""

#: aiaccel.optimizer.abstract_optimizer.AbstractOptimizer.resume:2 of
msgid "optimization data in advance."
msgstr ""

#: ../../source/api_reference/aiaccel.optimizer.rst:16
msgid "aiaccel.optimizer.create module"
msgstr ""

#: aiaccel.optimizer.create.import_and_getattr:1 of
msgid "Imports the specified Optimizer class. -"
msgstr ""

#: aiaccel.optimizer.create.import_and_getattr:4 of
msgid "Args:"
msgstr ""

#: aiaccel.optimizer.create.import_and_getattr:4 of
msgid "name(str): Optimizer class name"
msgstr ""

#: aiaccel.optimizer.create.import_and_getattr:5 of
msgid "(e.g.) aiaccel.optimizer.NelderMeadOptimizer"
msgstr ""

#: aiaccel.optimizer.create.import_and_getattr:7 of
msgid "Returns:"
msgstr ""

#: aiaccel.optimizer.create.import_and_getattr:8 of
msgid "Any: <Optimizer class>"
msgstr ""

#: ../../source/api_reference/aiaccel.optimizer.rst:24
msgid "aiaccel.optimizer.grid\\_optimizer module"
msgstr ""

#: aiaccel.optimizer.grid_optimizer.GridOptimizer:1
#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer:1
#: aiaccel.optimizer.random_optimizer.RandomOptimizer:1
#: aiaccel.optimizer.sobol_optimizer.SobolOptimizer:1
#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer:1 of
msgid ""
"ベースクラス: "
":py:class:`~aiaccel.optimizer.abstract_optimizer.AbstractOptimizer`"
msgstr ""

#: aiaccel.optimizer.grid_optimizer.GridOptimizer:1 of
msgid "An optimizer class with grid search algorithm."
msgstr ""

#: aiaccel.optimizer.grid_optimizer.GridOptimizer:5 of
msgid "A list of ready hyper parameters."
msgstr ""

#: aiaccel.optimizer.grid_optimizer.GridOptimizer:7 of
msgid "List[dict]"
msgstr ""

#: aiaccel.optimizer.grid_optimizer.GridOptimizer:11
#: aiaccel.optimizer.sobol_optimizer.SobolOptimizer:5 of
msgid "A number of generated hyper parameters."
msgstr ""

#: aiaccel.optimizer.grid_optimizer.GridOptimizer.generate_initial_parameter:1
#: of
msgid "Generate initial parameters."
msgstr ""

#: aiaccel.optimizer.grid_optimizer.GridOptimizer.generate_initial_parameter:3
#: aiaccel.optimizer.grid_optimizer.GridOptimizer.generate_parameter:6 of
msgid "A List of new parameters."
msgstr ""

#: aiaccel.optimizer.grid_optimizer.GridOptimizer.get_parameter_index:1 of
msgid "Get a next parameter index."
msgstr ""

#: aiaccel.optimizer.grid_optimizer.GridOptimizer.get_parameter_index:3 of
msgid "It returns None if all parameters are     already generated."
msgstr ""

#: aiaccel.optimizer.grid_optimizer.GridOptimizer.get_parameter_index:5 of
msgid "It returns None if all parameters are"
msgstr ""

#: aiaccel.optimizer.grid_optimizer.GridOptimizer.get_parameter_index:6 of
msgid "already generated."
msgstr ""

#: aiaccel.optimizer.grid_optimizer.generate_grid_points:1 of
msgid "Make a list of all parameters for this grid."
msgstr ""

#: aiaccel.optimizer.grid_optimizer.generate_grid_points:3 of
msgid "A hyper parameter object."
msgstr ""

#: aiaccel.optimizer.grid_optimizer.generate_grid_points:5 of
msgid "A configuration object."
msgstr ""

#: aiaccel.optimizer.grid_optimizer.generate_grid_points:8 of
msgid "A dictionary including all grid parameters."
msgstr ""

#: aiaccel.optimizer.grid_optimizer.generate_grid_points:11
#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.generate_parameter:8
#: of
msgid "Causes when an invalid parameter type is set."
msgstr ""

#: aiaccel.optimizer.grid_optimizer.get_grid_options:1 of
msgid "Get options about grid search."
msgstr ""

#: aiaccel.optimizer.grid_optimizer.get_grid_options:3 of
msgid "A parameter name to get its options."
msgstr ""

#: aiaccel.optimizer.grid_optimizer.get_grid_options:5 of
msgid "A config object."
msgstr ""

#: aiaccel.optimizer.grid_optimizer.get_grid_options:8 of
msgid ""
"The first one is a     base of logarithm parameter. The second one is "
"logarithm parameter     or not. The third one is a step of the grid."
msgstr ""

#: aiaccel.optimizer.grid_optimizer.get_grid_options:11 of
msgid "The first one is a"
msgstr ""

#: aiaccel.optimizer.grid_optimizer.get_grid_options:11 of
msgid ""
"base of logarithm parameter. The second one is logarithm parameter or "
"not. The third one is a step of the grid."
msgstr ""

#: aiaccel.optimizer.grid_optimizer.get_grid_options:15 of
msgid "Causes when step is not specified."
msgstr ""

#: ../../source/api_reference/aiaccel.optimizer.rst:32
msgid "aiaccel.optimizer.nelder\\_mead\\_optimizer module"
msgstr ""

#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer:1 of
msgid "An optimizer class with nelder mead algorithm."
msgstr ""

#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.get_nm_results:1
#: of
msgid "Get the list of Nelder-Mead result."
msgstr ""

#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.get_nm_results:3
#: of
msgid "Results per trial."
msgstr ""

#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.get_ready_parameters:1
#: of
msgid "Get the list of ready parameters."
msgstr ""

#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.get_ready_parameters:3
#: of
msgid "list"
msgstr ""

#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.nelder_mead_main:1
#: of
msgid "Nelder Mead's main module."
msgstr ""

#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.nelder_mead_main:5
#: of
msgid "Result of optimization."
msgstr ""

#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.update_ready_parameter_name:1
#: of
msgid "Update hyperparameter's names."
msgstr ""

#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.update_ready_parameter_name:3
#: of
msgid "old parameter name"
msgstr ""

#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.update_ready_parameter_name:5
#: of
msgid "New parameter name"
msgstr ""

#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.update_ready_parameter_name:13
#: of
msgid "befor"
msgstr ""

#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.update_ready_parameter_name:22
#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.update_ready_parameter_name:35
#: of
msgid "{"
msgstr ""

#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.update_ready_parameter_name:15
#: of
msgid "'vertex_id': 'CMTrNe5P8a', 'parameters': ["
msgstr ""

#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.update_ready_parameter_name:17
#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.update_ready_parameter_name:30
#: of
msgid ""
"{'parameter_name': 'x1', 'value': 3.37640289751353}, {'parameter_name': "
"'x2', 'value': 1.6556037243290205}"
msgstr ""

#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.update_ready_parameter_name:19
#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.update_ready_parameter_name:32
#: of
msgid ""
"], 'state': 'WaitExpand', 'itr': 5, 'index': None, 'out_of_boundary': "
"False"
msgstr ""

#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.update_ready_parameter_name:26
#: of
msgid "after"
msgstr ""

#: aiaccel.optimizer.nelder_mead_optimizer.NelderMeadOptimizer.update_ready_parameter_name:28
#: of
msgid "'vertex_id': '000014', <---- replace to trial_id 'parameters': ["
msgstr ""

#: ../../source/api_reference/aiaccel.optimizer.rst:40
msgid "aiaccel.optimizer.random\\_optimizer module"
msgstr ""

#: aiaccel.optimizer.random_optimizer.RandomOptimizer:1 of
msgid "An optimizer class with a random algorithm."
msgstr ""

#: ../../source/api_reference/aiaccel.optimizer.rst:48
msgid "aiaccel.optimizer.sobol\\_optimizer module"
msgstr ""

#: aiaccel.optimizer.sobol_optimizer.SobolOptimizer:1 of
msgid "An optimizer class with sobol algorithm."
msgstr ""

#: aiaccel.optimizer.sobol_optimizer.SobolOptimizer:11 of
msgid ""
"ToDo: Make it clear to resume this optimizer with Sobol sampler. Current "
"code resume the sampler counts with a"
msgstr ""

#: aiaccel.optimizer.sobol_optimizer.SobolOptimizer:10 of
msgid ""
"number of FINISHED PARAMETER FILES. Confirm whether the current code "
"resumes for any timings of quits."
msgstr ""

#: ../../source/api_reference/aiaccel.optimizer.rst:56
msgid "aiaccel.optimizer.tpe\\_optimizer module"
msgstr ""

#: aiaccel.optimizer.tpe_optimizer.TPESamplerWrapper:1 of
msgid "ベースクラス: :py:class:`~optuna.samplers._tpe.sampler.TPESampler`"
msgstr ""

#: aiaccel.optimizer.tpe_optimizer.TPESamplerWrapper.get_startup_trials:1 of
msgid "Get a number of startup trials in TPESampler."
msgstr ""

#: aiaccel.optimizer.tpe_optimizer.TPESamplerWrapper.get_startup_trials:3 of
msgid "A number of startup trials."
msgstr ""

#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer.check_result:1 of
msgid "Check the result files and add it to sampler object."
msgstr ""

#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer.create_study:1 of
msgid "Create the optuna.study object and store it."
msgstr ""

#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer.is_startup_trials:1
#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer.is_startup_trials:3 of
msgid "Is a current trial startup trial or not."
msgstr ""

#: aiaccel.optimizer.tpe_optimizer.TpeOptimizer.pre_process:1 of
msgid "Pre-Procedure before executing optimize processes."
msgstr ""

#: aiaccel.optimizer.tpe_optimizer.create_distributions:1 of
msgid "Create an optuna.distributions dictionary for the parameters."
msgstr ""

#: aiaccel.optimizer.tpe_optimizer.create_distributions:3 of
msgid "A parameter configuration object."
msgstr ""

#: aiaccel.optimizer.tpe_optimizer.create_distributions:7 of
msgid "An optuna.distributions object."
msgstr ""

#: ../../source/api_reference/aiaccel.optimizer.rst:64
msgid "Module contents"
msgstr ""

